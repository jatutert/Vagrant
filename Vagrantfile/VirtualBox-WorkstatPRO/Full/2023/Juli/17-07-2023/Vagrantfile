# -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Vagrant Configuratie Bestand voor Ubuntu/Docker (VMWare Workstation/VirtualBox) en Windows 10 Enterprise
# Gemaakt door John Tutert
# Datum 17 juli 2023
#
# https://www.thisprogrammingthing.com/20s15/multiple-vagrant-vms-in-one-vagrantfile/
#
Vagrant.configure("2") do |config|
  # Oracle VirtualBox | Ubuntu 22.10 | Docker | Docker Compose
  # Naslag is te vinden op https://developer.hashicorp.com/vagrant/docs/providers/virtualbox
  config.vm.define "vdckr" do |vdckr|
    vdckr.vm.box = "generic/ubuntu2210"
    vdckr.vm.hostname = "ulx-dkr-001"
    vdckr.vm.box_check_update = true
	vdckr.vm.network "forwarded_port", guest: 80, host: 8888, host_ip: "127.0.0.1", protocol: "tcp", id: "webcntr01"	
    # Host-Only NIC toevoegen met fixed IP
	vdckr.vm.network "private_network", ip: "192.168.56.200", netmask: "255.255.255.0"
	vdckr.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.cpus = "2"
	  vb.memory = "4096"
    end
    vdckr.vm.provision "shell", inline: <<-SHELL
     # ===========================================================================================================   
	 # Dit gedeelte wordt alleen uitgevoerd bij eerste start VM OF bij Provision parameter 
	 # ===========================================================================================================
	 # [1] Bijwerken Ubuntu 22.10 LTS met de laatste updates voor installatie applicaties
     sudo apt-get update
     sudo apt-get upgrade -y
     # [2] Installeren Midnight Commander en Screenfetch
     sudo apt-get install -y mc screenfetch open-vm-tools
     # [3] Installeren Docker en Docker Compose zoals beschreven op https://docs.docker.com/engine/install/ubuntu/
     sudo apt-get install -y ca-certificates curl gnupg
     sudo install -m 0755 -d /etc/apt/keyrings
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
     sudo chmod a+r /etc/apt/keyrings/docker.gpg
     echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
     sudo apt-get update
     sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
	 sudo usermod -aG docker $USER && newgrp docker
	 # [3] Bijwerken Ubuntu 22.10 LTS met de laatste updates
	 sudo apt-get update
	 sudo apt-get upgrade -y
    SHELL
  end
  # Oracle VirtualBox | Ubuntu 22.10 | MiniKube
  config.vm.define "vminik" do |vminik|
    vminik.vm.box = "generic/ubuntu2210"
    vminik.vm.hostname = "ulx-dkr-001"
    vminik.vm.box_check_update = true
	vminik.vm.network "forwarded_port", guest: 80, host: 8888, host_ip: "127.0.0.1", protocol: "tcp", id: "webcntr01"	
    # Host-Only NIC toevoegen met fixed IP
	vminik.vm.network "private_network", ip: "192.168.56.201"
	vminik.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.cpus = "2"
	  vb.memory = "4096"
    end
    vminik.vm.provision "shell", inline: <<-SHELL
     # ===========================================================================================================   
	 # Dit gedeelte wordt alleen uitgevoerd bij eerste start VM OF bij Provision parameter 
	 # ===========================================================================================================   
	 # Bijwerken Ubuntu 22.10 LTS met de laatste updates voor installatie applicaties
     sudo apt-get update
     sudo apt-get upgrade -y
     # Installeren Midnight Commander en Screenfetch
     sudo apt-get install -y mc screenfetch open-vm-tools
     # Installeren MiniKube
     curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
	 sudo install minikube-linux-amd64 /usr/local/bin/minikube  
	 # Bijwerken
	 sudo apt-get update
	 sudo apt-get upgrade -y
	 # Installatie KVM
	 sudo apt install libvirt-clients libvirt-daemon-system libvirt-daemon virtinst bridge-utils qemu qemu-kvm virt-manager
     sudo systemctl enable --now libvirtd
     sudo systemctl start libvirtd
     sudo usermod -aG kvm $USER	 
	 sudo usermod -aG libvirt $USER
    SHELL
  end
  # Ubuntu 22.10 met Docker en Docker Compose VMWare Workstation
  # Naslag is te vinden op https://developer.hashicorp.com/vagrant/docs/providers/vmware
  config.vm.define "wdckr" do |wdckr|
    wdckr.vm.box = "generic/ubuntu2210"
    wdckr.vm.hostname = "ulx-dkr-001"
    wdckr.vm.box_check_update = true
    wdckr.vm.provider "vmware_desktop" do |vmw|
      vmw.gui = true
      vmw.cpus = "2"
	  vmw.memory = "4096"
    end 
   wdckr.vm.provision "shell", inline: <<-SHELL
    # ===========================================================================================================   
	# Dit gedeelte wordt alleen uitgevoerd bij eerste start VM OF bij Provision parameter 
	# ===========================================================================================================
	# [1] Bijwerken Ubuntu 22.10 LTS met de laatste updates voor installatie applicaties ************************************************
    sudo apt-get update
    sudo apt-get upgrade -y
    # [2] Installeren Midnight Commander en Screenfetch
    echo Installatie Midnight Commander
	sudo apt-get install -y mc screenfetch open-vm-tools
    # [3] Installeren Docker en Docker Compose zoals beschreven op https://docs.docker.com/engine/install/ubuntu/
    echo [3] Installatie Docker en Docker Compose ****************************************************************************************
	sudo apt-get install -y ca-certificates curl gnupg
    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg
    echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
	# [4] Bijwerken Ubuntu 22.10 LTS met de laatste updates *******************************************************************************
	echo [4] Bijwerken Ubuntu met laatste updates 
	sudo apt-get update
	sudo apt-get upgrade -y
    # [5] Installatie Minikube 1.x
    echo [5] Installatie MiniKube *********************************************************************************************************
	curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
	sudo dpkg -i minikube_latest_amd64.deb
	# [6] Gebruiker toevoegen aan Docker groep 
	echo Doe nog zelf: sudo usermod -aG docker $USER && newgrp docker
    SHELL
  end 
  # Windows 10 Enterprise 22H2 
  config.vm.define "wintien" do |wintien|
    wintien.vm.box = "gusztavvargadr/windows-10"
	wintien.vm.box_check_update = true
	wintien.vm.guest = :windows
	wintien.vm.boot_timeout = 3600
    wintien.vm.hostname = "WinTien"
	wintien.vm.communicator = "winrm"
	# wintien.vm.network "forwarded_port", guest: 3389, host: 3389, id: "rdp", auto_correct: true
    # wintien.vm.network "forwarded_port", guest: 5985, host: 5985, id: "winrm", auto_correct: true
    # wintien.winrm.host = "localhost"
    wintien.vm.provider "vmware_desktop" do |vb|
      vb.gui = true
      vb.cpus = "2"
	  vb.memory = "4096"
    end
   # wintien.vm.provision "shell", inline: <<-SHELL 
    wintien.vm.provision "shell", privileged: "true", inline: <<-SHELL
	 echo $ErrorActionPreference = 'Stop' >ps-winget.ps1
	 echo $r = Invoke-RestMethod -Method Get -Uri https://api.github.com/repos/microsoft/winget-cli/releases/latest >>ps-winget.ps1
	 echo $r.assets | ? { $_.name -match "\.msixbundle$" } | % { >>ps-winget.ps1
	 echo     $downloadedFile = Join-Path $env:Temp $_.name >>ps-winget.ps1
	 echo     if (Test-Path $downloadedFile) { >>ps-winget.ps1
	 echo         Remove-Item $downloadedFile -Force >>ps-winget.ps1
	 echo  } >>ps-winget.ps1
	 REM powershell -ExecutionPolicy Unrestricted 
	 REM powershell -file ps-winget.ps1
    SHELL
  end
end