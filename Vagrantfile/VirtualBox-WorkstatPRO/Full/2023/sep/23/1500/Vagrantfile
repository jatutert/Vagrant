# -*- mode: ruby -*-
# vi: set ft=ruby :
#
#
#
#
=begin

Vagrant Configuratie voor Oracle Virtualbox en VMware Workstation/Fusion PRO hypervisors
Vagrant is copyrighted by Hashicorp (www.vagrantup.com)
(C) Copyright 2023 JA Tutert

This configuration may only be used for private use or education use. Business/commercial use is prohibited. 
It is intended for use with virtual machines on a hypervisor and thus not for configuration of bare-metal or cloud machines.


Versie: 4.23.09.23
Build 20230923

Legenda Boxes:

POV		provider	Oracle Virtualbox
PVD		provider	VMWare Workstation / Fusion PRO
PDR		provider	Docker
PMH		provider	Microsoft Hyper-V

ULD		Ubuntu Linux desktop
ULS		Ubuntu Linux server
ALD		Alpine Linux Desktop
ALS		Alpine Linux Server

AS	=	Alvistack Box
GC 	= 	Generic Box
GR 	= 	Gusztavvargadr Box
MN 	= 	Maroskukan Box

S		Small			2 GB	
M		Medium			4 GB
L		Large			8 GB
XL		Extra Large		16 GB

A	=	Ansible
K	=	Kubernetes

=end
#
#
versie_vagrantfile = "4.23.09.23"
#
#
#	Aanmaken variable met huidige datum 
#
require 'date'
cur_date = Date.today
#
#
#	Weergeven melding
#
#
puts "Using VAGRANTFILE version #{versie_vagrantfile} by John Tutert (for private or educational use only!)"
#
#
#
#
# ############################################ [Declaratie Virtuele Machines] ##########################################
#
#
#
#
ubuntu_machines=[
	#
	#
	#	GENERIC
	#
	#
	#	--------------------------------------
	#	DEBIAN LINUX
	#	--------------------------------------
	#
	#
	#	Provider: VMware 
	#
	{
        :hostname => "pvd-dld-11-GC-S",
        :box => "generic/debian11",
		:os => "debian",
		:osedition => "desktop",
		:osversie => 11, 
		:aanbieder => "VMware",
        :ram => 2048,
        :cpu => 2,
	},
	{
        :hostname => "pvd-dld-11-GC-M",
        :box => "generic/debian11",
		:os => "debian",
		:osedition => "desktop",
		:osversie => 11, 
		:aanbieder => "VMware",
        :ram => 4096,
        :cpu => 2,
	},
	{
        :hostname => "pvd-dld-11-GC-L",
        :box => "generic/debian11",
		:os => "debian",
		:osedition => "desktop",
		:osversie => 11, 
		:aanbieder => "VMware",
        :ram => 8192,
        :cpu => 2,
	},
	#
	#
	#	--------------------------------------
	#	Ubuntu Linux
	#	--------------------------------------
	#
	#
	#	Ubuntu 20.04.x LTS Focal Fossa (release 23 april 2020) (EOS April 2025) (EOL April 2030)
	#
	#	Laatste versie is 20.04.6 LTS (Maart 2023)
	#
	#	https://www.omgubuntu.co.uk/2022/02/download-ubuntu-20-04-4-point-release
	# 	https://wiki.ubuntu.com/Releases
	#
	#
	#	Provider: VMware
	#
	{
        :hostname => "pvd-uld-2004-GC-S",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "VMware",
        :ram => 2048,
        :cpu => 2,
	},
	{
        :hostname => "pvd-uld-2004-GC-M",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 4096,
        :cpu => 2,
    },
	{
		:hostname => "pvd-uld-2004-GC-L",
		:box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#	Provider: Oracle Virtualbox
	#
	{
		:hostname => "pov-uld-2004-GC-S",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004,
		:aanbieder => "Oracle",		
        :ram => 2048,
        :cpu => 2,
		:ip => "192.168.56.201",
	},
	{
        :hostname => "pov-uld-2004-GC-M",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "Oracle",
        :ram => 4096,
        :cpu => 2,
		:ip => "192.168.56.202",
    },
	{
		:hostname => "pov-uld-2004-GC-L",
		:box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.203",
    },
	#
	#	Ubuntu 22.04.x LTS Jammy Jellyfish (release 23 februari 2023) (EOS April 2027) (EOL April 2032) 
	#
	#	Box is voorzien van 22.04.2 LTS
	#
	#	Laatste versie: 22.04.3 LTS Augustus 2023
	#	Bevat Kernel 6.2
	# 	Meer info: https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue800
	#
	# 	https://wiki.ubuntu.com/Releases
	#
	#
	#	Provider VMware
	#
    {
        :hostname => "pvd-uld-2204-GC-S",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "VMware",
        :ram => 2048,
        :cpu => 2,
    },
	{
        :hostname => "pvd-uld-2204-GC-M",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "VMware",
        :ram => 4096,
        :cpu => 2,
    },	
	{
		:hostname => "pvd-uld-2204-GC-L",
		:box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	{
		:hostname => "pvd-uld-2204-GC-XL",
		:box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "VMware",
		:ram => 16384,
		:cpu => 2,
    },	
	#
	#	Provider: Oracle Virtualbox 
	#
	{
        :hostname => "pov-uld-2204-GC-S",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
        :ram => 2048,
        :cpu => 2,
		:ip => "192.168.56.204",
    },      
    {
        :hostname => "pov-uld-2204-GC-M",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
        :ram => 4096,
        :cpu => 2,
		:ip => "192.168.56.205",
    },	  
	{
		:hostname => "pov-uld-2204-GC-L",
		:box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.206",
    },	  
	{
		:hostname => "pov-uld-2204-GC-XL",
		:box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
		:ram => 16384,
		:cpu => 2,
		:ip => "192.168.56.207",
    },	  
	#
	#	Ubuntu 22.10 Kinetec Kundu (interim release 20 oktober 2022)
	#
	#	Linux Kernel 5.19
	#	GNOME 43
	#	
	#	GEEN (security) updates meer NA 20 juli 2023
	#	Alleen voor testen gebruiken !
	#
	# 	https://wiki.ubuntu.com/Releases
	#
	#
	#	Provider: VMware 
	#
	{
        :hostname => "pvd-uld-2210-GC-S",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
        :ram => 2048,
        :cpu => 2,
    },
    {
        :hostname => "pvd-uld-2210-GC-M",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMWare",
        :ram => 4096,
        :cpu => 2,
    },	
	{
		:hostname => "pvd-uld-2210-GC-L",
		:box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#	Provider: Oracle Virtualbox 
	#
    {
        :hostname => "pov-uld-2210-GC-S",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
        :ram => 2048,
        :cpu => 2,
		:ip => "192.168.56.208",
    },		
    {
        :hostname => "pov-uld-2210-GC-M",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
        :ram => 4096,
        :cpu => 2,
		:ip => "192.168.56.209",
    },	  
	{
		:hostname => "pov-uld-2210-GC-L",
		:box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.210",
    },	  
	#
	#
	#	##########
	#	Maroskukan
	#	##########
	#
	#
	#	Maroskukan Ubuntu 22.10 Kinetec Kundu (interim release 20 oktober 2022)
	#
	#	GEEN (security) updates meer NA 20 juli 2023
	#	Alleen voor testen gebruiken !
	#
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2210-MN-S",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
		:ram => 2048,
		:cpu => 2,
		:ip => "192.168.56.211",
    },
	{
		:hostname => "pvd-uld-2210-MN-S",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 2048,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2210-MN-M",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
		:ram => 4096,
		:cpu => 2,
		:ip => "192.168.56.212",
    },
	{
		:hostname => "pvd-uld-2210-MN-M",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 4096,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2210-MN-L",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 	
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.213",
    },
	{
		:hostname => "pvd-uld-2210-MN-L",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#	Maroskukan Ubuntu 23.04 (Lunar Lobster) (release 20 april 2023) (EOS/EOL januari 2024)
	#
	#	Bevat nieuwe installer en GNOME versie 44 (Desktop bij Release) 
	#	Kernel versie 6.2
	#	https://www.omgubuntu.co.uk/2023/03/ubuntu-23-04-features
	#
	# 	https://wiki.ubuntu.com/Releases	
	#
	{
		:hostname => "pov-uld-2304-MN-S",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 2048,
		:cpu => 2,
		:ip => "192.168.56.214",
    },
	{
		:hostname => "pvd-uld-2304-MN-S",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "VMware",
		:ram => 2048,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2304-MN-M",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 4096,
		:cpu => 2,
		:ip => "192.168.56.215",
    },
	{
		:hostname => "pvd-uld-2304-MN-M",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "VMware",
		:ram => 4096,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2304-MN-L",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.216",
    },
	{
		:hostname => "pvd-uld-2304-MN-L",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#
	#	####################################
	#	Alvistack
	#	https://github.com/alvistack
	#	####################################
	#
	#
	#	Alvistack Ubuntu 22.04 Jammy Jellyfish (release 23 februari 2023) (EOS April 2027) (EOL April 2032) 
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2204-AS-L-A",
		# 	Standaard voorzien van Ansible
		#	https://app.vagrantup.com/alvistack/boxes/ubuntu-22.04
		#	https://github.com/alvistack/vagrant-ubuntu
		:box => "alvistack/ubuntu-22.04",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.217",
    },
	#
#	######################################################## NIET IN GEBRUIK #############################
#	{
#       :hostname => "oak8u22L",
#	   #	Kubernetes
#	   #	https://github.com/alvistack/vagrant-kubernetes
#	   #
#	   #	Ubuntu 22.04.3 LTS 
#	   #
#	   #	config.vm.disk :disk, name: 'sdb', size: '10GB'
#	   #	virtualbox.customize ['modifyvm', :id, '--cpu-profile', 'host']
#	   #	virtualbox.customize ['modifyvm', :id, '--nested-hw-virt', 'on']
#	   #
#       :box => "alvistack/kubernetes-1.27",
#	   :aanbieder => "Oracle",
#       #	virtualbox.memory = 8192
#	   :ram => 4096,
#       #	virtualbox.cpus = 2
#	   :cpu => 2,
#	   :ip => "192.168.56.217",
#    },
#	######################################################## NIET IN GEBRUIK #############################
	#
	#
	#	Alvistack Ubuntu 22.10 Kinetec Kundu (interim release 20 oktober 2022)
	#	GEEN (security) updates meer NA 20 juli 2023
	#	Alleen voor testen gebruiken !
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2210-AS-L-A",
		# 	Standaard voorzien van Ansible
		#	https://github.com/alvistack/vagrant-ubuntu       
		:box => "alvistack/ubuntu-22.10",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 	   
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.218",
    },
	#
	#	Alvistack Ubuntu 23.04 (Lunar Lobster) (release 20 april 2023) (EOS/EOL januari 2024) 
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2304-AS-L-A",
		#	Standaard voorzien van Ansible
		#	https://github.com/alvistack/vagrant-ubuntu	   
		:box => "alvistack/ubuntu-23.04",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.219",
    },
	#
	#
	#	##############
	#	gusztavvargadr
	#	##############
	#
	#
	#	Gusztavvargadr Ubuntu Server 20.04.x LTS Focal Fossa (release 23 april 2020) (EOS April 2025) (EOL April 2030)  
	# 	https://wiki.ubuntu.com/Releases
	#
	#
	#	gusztavvargadr/ubuntu-server = Ubuntu Server 20.04.6 LTS
	#
	{
		:hostname => "pov-uls-2004-GR-L",
		:box => "gusztavvargadr/ubuntu-server",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.220",
    },
	{
		:hostname => "pov-uls-2004-GR-L-2004LTS",
		:box => "gusztavvargadr/ubuntu-server-2004-lts",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.221",
    },
	{
		:hostname => "pvd-uls-2004-GR-L",
		:box => "gusztavvargadr/ubuntu-server",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	{
		:hostname => "pvd-uls-2004-GR-L-2004LTS",
		:box => "gusztavvargadr/ubuntu-server-2004-lts",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#
	#	1.1 Introductie Infrastructuren 
	#
	#
	{
		:hostname => "pvd-intro-infra-web-srv",
		:box => "gusztavvargadr/ubuntu-server",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 4096,
		:cpu => 2,
    },
	{
		:hostname => "pvd-intro-infra-db-srv",
		:box => "gusztavvargadr/ubuntu-server",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 4096,
		:cpu => 2,
    }
	#
	#
	#
	#
	#
    ]
#
#
#
#
windows_machines=[
	#
	#
	#	################################
	#	Windows 10 Enterprise Evaluation
	#	################################
	#
	#
	#	##############
	#	gusztavvargadr
	#	##############
	#
	#
	{
		:hostname => "ow10eval",
        :box => "gusztavvargadr/windows-10",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 10, 
		:aanbieder => "Oracle",
        :ram => 8192,
        :cpu => 2
	},
	{
        :hostname => "vw10eval",
        :box => "gusztavvargadr/windows-10",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 10, 
		:aanbieder => "VMware",
        :ram => 8192,
        :cpu => 2
	},
	#
	#
	#	################################
	#	Windows 11 Enterprise Evaluation
	#	################################
	#
	#
	#	##############
	#	gusztavvargadr
	#	##############
	#
	#
	{
		:hostname => "ow11eval",
        :box => "gusztavvargadr/windows-11",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 11, 
		:aanbieder => "Oracle",
        :ram => 8192,
        :cpu => 2
	},
	{
        :hostname => "vw11eval",
        :box => "gusztavvargadr/windows-11",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 11, 
		:aanbieder => "VMware",
        :ram => 8192,
        :cpu => 2
	}
	#
	#
	#
    ]
#
#
# 	############################################ [Declaratie Scripts] ##########################################
#
#
#	##########################
#	[1]		Linux
#	##########################
#
#
#	[1a]	Aanmaken directory Structuur 
#
$maak_directory_structuur = <<SCRIPT
	#
	#! /bin/bash
	#
	#	Maak directory tmp 
	#
	mkdir -p /home/vagrant/tmp
	#
	#	rechten zetten voor /home/vagrant/data en alle subdirs 
	#
	sudo chown -f -R vagrant /home/vagrant/tmp
	#
	#	Maak directory voor Cockpit poort configuratie bestand 
	#
	mkdir -p /etc/systemd/system/cockpit.socket.d/
	#
	#	Maak directory voor data
	#
	mkdir -p /home/vagrant/data
	#
	mkdir -p /home/vagrant/data/minio
	#
	mkdir -p /home/vagrant/data/nextcloud 
	mkdir -p /home/vagrant/data/nextcloud/html
	mkdir -p /home/vagrant/data/nextcloud/html/data
	#
	mkdir -p /home/vagrant/data/nginx
	#
	mkdir -p /home/vagrant/data/odoo
	mkdir -p /home/vagrant/data/odoo/addons
	mkdir -p /home/vagrant/data/odoo/etc
	mkdir -p /home/vagrant/data/odoo/postgresql 
	#
	#	rechten zetten voor /home/vagrant/data en alle subdirs 
	#
	sudo chown -f -R vagrant /home/vagrant/data
	#
	# Maak directory voor Docker Compose 
	#
	mkdir -p /home/vagrant/docker-compose 
	mkdir -p /home/vagrant/docker-compose/nextcloud 
	mkdir -p /home/vagrant/docker-compose/ngnix 
	mkdir -p /home/vagrant/docker-compose/odoo 
	#
	#	rechten zetten voor /home/vagrant/docker-compose en alle subdirs 
	#
	sudo chown -f -R vagrant /home/vagrant/docker-compose
	#
	# Maak directory voor MicroK8S demos
	#
	mkdir -p /home/vagrant/microk8s_demos
	mkdir -p /home/vagrant/microk8s_demos/mysql 
	mkdir -p /home/vagrant/microk8s_demos/nginx
	#
	# rechten zetten voor /home/vagrant/microk8s_demos en alle subdirs
	#
	sudo chown -f -R vagrant /home/vagrant/microk8s_demos
	#
	# 	Maak directory voor scripts
	#
	mkdir -p /home/vagrant/scripts 
	#	Maak subdirectories alle scriptsoorten
	mkdir -p /home/vagrant/scripts/ansible_scripts 
	mkdir -p /home/vagrant/scripts/microk8s_scripts 
	mkdir -p /home/vagrant/scripts/minikube_scripts 
	mkdir -p /home/vagrant/scripts/minio_scripts 
	mkdir -p /home/vagrant/scripts/terraform_scripts
	mkdir -p /home/vagrant/scripts/ubuntu_init_scripts 
	#
	#	rechten zetten voor /home/vagrant/scripts en alle subdirs 
	#
	sudo chown -f -R vagrant /home/vagrant/scripts 
	#
SCRIPT
#
#	[1b]	Script die bij IEDERE virtuele machine worden uitgevoerd (zowel provision als execute) ##
#
#
# 	[1b-1] 	Ubuntu repo
#
#
$ubuntu_init_change_repo = <<SCRIPT
	#
	# Aanmaken ubuntu_init_change_repo Script 
	#
	#! /bin/bash
	#
	# mkdir /home/vagrant/scripts > /dev/null 2>&1
	# mkdir /home/vagrant/scripts/ubuntu_init_scripts > /dev/null 2>&1
	#
	# create script
	echo '#! /bin/bash' > /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	echo '#' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	echo '# Change Ubuntu Reposiory to nl.archive.ubuntu.com' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	echo '#' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	echo '# Aanpassen sources.list' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	echo "sudo sed 's@archive.ubuntu.com@nl.archive.ubuntu.com@' -i /etc/apt/sources.list" >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	echo "sudo sed 's@mirrors.edge.kernel.org@nl.archive.ubuntu.com@' -i /etc/apt/sources.list" >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
	sudo chmod +x /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh
SCRIPT
#
#
# [1b-2] Ubuntu upgrade script
#
#
$ubuntu_init_upgrade_os = <<SCRIPT
	#
	# Aanmaken ubuntu_init_upgrade_os Script 
	#
	#! /bin/bash
	# 
	# mkdir /home/vagrant/scripts > /dev/null 2>&1
	# mkdir /home/vagrant/scripts/ubuntu_init_scripts > /dev/null 2>&1
	#
	# create script
	echo '#! /bin/bash' > /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	echo '#' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	echo '# Ubuntu UPGRADE' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	echo '#' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	echo 'sudo apt update -qq -y > /dev/null 2>&1' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	echo 'sudo apt upgrade -y' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	echo 'sudo apt autoremove -qq -y > /dev/null 2>&1' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
	sudo chmod +x /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh
SCRIPT
#
#
# [1b-3] Ubuntu_Utils
#
#
# Midnight Commander (MC en MCedit) 
# Screenfetch
# Open-VM-Tools (VMware Tools) 
# WGet
#
#
$ubuntu_init_install_utils = <<SCRIPT
	#
	# Aanmaken ubuntu_init_install_utils Script 
	#
	#!/bin/bash
	# 
	# mkdir /home/vagrant/scripts > /dev/null 2>&1
	# mkdir /home/vagrant/scripts/ubuntu_init_scripts > /dev/null 2>&1
	#
	# create script
	echo '#! /bin/bash' > /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo '#' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo '# Ubuntu Installatie Utils' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo '#' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo 'sudo apt install -qq -y mc' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo 'sudo apt install -qq -y screenfetch' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo 'sudo apt install -qq -y open-vm-tools' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo 'sudo apt install -qq -y wget' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	echo 'sudo snap install curl --channel=latest' >> /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
	sudo chmod +x /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh
SCRIPT
#
#	[1b-4]	Verzamel script Ubuntu Init 
#
#
$ubuntu_init_script = <<SCRIPT
	#
	# Aanmaken ubuntu_init_script Script 
	#
	#!/bin/bash
	#
	# mkdir /home/vagrant/scripts > /dev/null 2>&1
	#
	# create script 
	echo '#! /bin/bash' > /home/vagrant/scripts/ubuntu-init-script.sh
	echo '#' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo '# Ubuntu INIT script' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo '#' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo '#' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo '# Script change repo starten' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo 'source /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-change-repo.sh' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo '# Script upgrade os starten' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo 'source /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-upgrade-os.sh' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo '# Script ubuntu utils starten' >> /home/vagrant/scripts/ubuntu-init-script.sh
	echo 'source /home/vagrant/scripts/ubuntu_init_scripts/ubuntu-init-install-utils.sh' >> /home/vagrant/scripts/ubuntu-init-script.sh
	sudo chmod +x /home/vagrant/scripts/ubuntu-init-script.sh
SCRIPT
#
#
#
# [1c] Script die bij provision virtuele machine met meer dan 4 GB RAM worden uitgevoerd
#
#
# [1c-1] Minikube_installatie (Kubernetes) 
#
#
$minikube_install = <<SCRIPT
	#
	# Aanmaken minikube installatie Script
	# Provider = Docker 
	#
	#!/bin/bash
	#
	# mkdir /home/vagrant/scripts/minikube_scripts > /dev/null 2>&1
	#
	# create script 
	echo '#!/bin/bash' > /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo '#' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo '# Installatie Minikube' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo '#' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo 'mkdir -p /home/vagrant/tmp' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo 'curl -o /home/vagrant/tmp/minikube_latest_amd64.deb https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo 'sudo dpkg -i /home/vagrant/tmp/minikube_latest_amd64.deb' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo 'rm /home/vagrant/tmp/minikube_latest_amd64.deb' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo # Minikube Driver Docker = Default >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo 'minikube config set driver docker' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo # Installatie kubectl >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	echo 'sudo snap install kubectl --classic' >> /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
	sudo chmod +x /home/vagrant/scripts/minikube_scripts/minikube-linux-install.sh
SCRIPT
#
#
# [1c-2] Minio_docker [Minio als Docker containers] 
#
# https://blog.knoldus.com/how-to-run-minio-as-a-docker-container/
#
#
$minio_docker_run = <<SCRIPT
	#
	#
	#	MinIO Object Storage for Docker (manier 2)  
	#	Handleiding: 	https://min.io/docs/minio/container/index.html
	#
	#
	#! /bin/bash
	#
	# mkdir /home/vagrant/scripts/minio_scripts > /dev/null 2>&1
	#
	# create script
	echo '#! /bin/bash' > /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	echo '#' >> /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	echo '# Minio Object Storage on Docker' >> /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	# echo 'mkdir -p /home/vagrant/data' >> /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	# echo 'mkdir -p /home/vagrant/data/minio' >> /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	echo 'docker run -d -p 9000:9000 -p 9001:9001 -p 9090:9090 --name minio -v /home/vagrant/data/minio:/data -e "MINIO_ROOT_USER=minio1234" -e "MINIO_ROOT_PASSWORD=minio1234" minio/minio server /data --console-address ":9001"' >>/home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	echo 'echo MINIO_ROOT_USER=minio1234' >> /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	echo 'echo MINIO_ROOT_PASSWORD=minio1234' >> /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
	sudo chmod +x /home/vagrant/scripts/minio_scripts/minio-docker-run.sh
SCRIPT
#
#
#
# [1c-3] ansible_installatie 
#
#
$ansible_install = <<SCRIPT
	#
	# Aanmaken Ansible installatie Script
	#
	#! /bin/bash
	#
	# mkdir /home/vagrant/scripts/ansible_scripts > /dev/null 2>&1
	#
	# create script 
	echo '#!/bin/bash' > /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo '#' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo '# ANSIBLE Installatie' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo '#' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo '# Toevoegen Repository' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo 'sudo apt-add-repository ppa:ansible/ansible' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo '# Bijwerken Repository' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo 'sudo apt update' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo '# Ansible Install' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	echo 'sudo apt install -y ansible' >> /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
	sudo chmod +x /home/vagrant/scripts/ansible_scripts/ansible-linux-install.sh
SCRIPT
#
#
# [1c-4] Terraform_installatie
#
#
$terraform_install = <<SCRIPT
	#
	# Aanmaken HashiCorp Terraform installatie Script
	#
	#! /bin/bash
	#
	# mkdir /home/vagrant/scripts/terraform_scripts > /dev/null 2>&1
	#
	# create script 
	echo '#!/bin/bash' > /home/vagrant/scripts/terraform_scripts/terraform-linux-install.sh
	echo 'sudo snap install terraform' >> /home/vagrant/scripts/terraform_scripts/terraform-linux-install.sh
	sudo chmod +x /home/vagrant/scripts/terraform_scripts/terraform-linux-install.sh
SCRIPT
#
#
# 	[1d] Script die bij provision virtuele machine met meer dan 8 GB RAM worden uitgevoerd
#
# 	[1d-1] 	minio_installatie [native install minio / niet voor minikube of kubernetes ] 
#
#
$minio_linux_run = <<SCRIPT
	#
	#
	#	MinIO Object Storage installatie op Linux (manier 3) 
	#	Handleiding: https://min.io/docs/minio/linux/index.html
	#  
	# 
	# Naslag: 
	# https://www.digitalocean.com/community/tutorials/how-to-set-up-minio-object-storage-server-in-standalone-mode-on-ubuntu-20-04
	# https://gist.github.com/kstevenson722/e7978a75aec25feaa6ad0965ec313e2d
	#
	#
	#! /bin/bash
	#
	# mkdir /home/vagrant/scripts/minio_scripts > /dev/null 2>&1
	#
	# create script
	#
	#	[Header]
			echo '#! /bin/bash' > /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo '#' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo '# MinIO Native Installatie' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo '# (c) 2023 John Tutert' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo '#' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo '# Toevoegen Repository' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[MinIO Server Installatie]
			echo 'mkdir -p /home/vagrant/tmp' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'curl -s -o /home/vagrant/tmp/minio_20230920224955.0.0_amd64.deb https://dl.min.io/server/minio/release/linux-amd64/minio_20230920224955.0.0_amd64.deb' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'sudo dpkg -i /home/vagrant/tmp/minio_20230920224955.0.0_amd64.deb' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'rm /home/vagrant/tmp/minio_20230920224955.0.0_amd64.deb' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[MinIO Groepen/Gebruikers]
			echo sudo groupadd -r minio-user >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo sudo useradd -M -r -g minio-user minio-user >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[MinIO Storage Folder]
			echo sudo mkdir /mnt/data >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo sudo chown minio-user:minio-user /mnt/data >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[MinIO Configuratie]
			echo 'echo MINIO_VOLUMES="/mnt/data" >> /etc/default/minio' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'echo MINIO_OPTS="--certs-dir /home/vag.rant/.minio/certs --console-address :9001" >> /etc/default/minio' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'echo MINIO_ROOT_USER=minioadmin >> /etc/default/minio' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'echo MINIO_ROOT_PASSWORD=minioadmin >> /etc/default/minio' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[MinIO UFW poorten openzetten]
			echo sudo ufw allow 9000:9001/tcp >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[Starten MinIO Server]
			echo sudo systemctl start minio >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo sudo systemctl enable minio >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[MinIO Client Installatie]
			echo 'mkdir -p /home/vagrant/tmp' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'curl -s -o /home/vagrant/tmp/mcli_20230920152231.0.0_arm64.deb https://dl.min.io/client/mc/release/linux-amd64/mcli_20230920152231.0.0_arm64.deb' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'sudo dpkg -i /home/vagrant/tmp/mcli_20230920152231.0.0_arm64.deb' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			echo 'rm /home/vagrant/tmp/mcli_20230920152231.0.0_arm64.deb' >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
	# 	[KubeCTL MinIO Plugin]
			#
			# 	https://min.io/docs/minio/kubernetes/upstream/reference/kubectl-minio-plugin.html
			#	https://www.origo.io/info/stabiledocs/guides/minio-object-storage-service/
			#	echo wget https://github.com/minio/operator/releases/download/v5.0.6/kubectl-minio_5.0.6_linux_amd64 -O kubectl-minio >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			#	echo chmod +x kubectl-minio >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			#	echo sudo mv kubectl-minio /usr/local/bin/ >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			#
			# 	https://www.olivercoding.com/2021-03-01-kubernetes-minio-init/
			# 	echo kubectl create namespace minio-operator >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			# 	echo kubectl minio init --namespace minio-operator >> /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
			#
	sudo chmod +x /home/vagrant/scripts/minio_scripts/minio-linux-run.sh
SCRIPT
#
#
# 	[1d-2] 	MicroK8S (Kubernetes voor desktops/laptops) installatie 
#
#
$microK8S_install = <<SCRIPT
	#
	#
	#! /bin/bash
	#
	# mkdir /home/vagrant/scripts/microk8s_scripts > /dev/null 2>&1
	#
	# create script 
	echo '#! /bin/bash' > /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'echo MicroK8S KubeCTL KubeADM Installation Script' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'echo WARNING !' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'echo This virtual machine will be rebooted at the end of this script !'  >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[1] Installatie MicroK8S versie 1.28 (UpStream Kubernetes) 16 augustus 2023
	#
	echo 'sudo snap install microk8s --classic --channel=1.28/stable > /dev/null 2>&1'	>> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[2] Configuratie Firewall 
	#
	echo 'sudo ufw allow in on cni0 > /dev/null 2>&1' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'sudo ufw allow out on cni0 > /dev/null 2>&1' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'sudo ufw default allow routed > /dev/null 2>&1' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[3] Gebruiker Vagrant toevoegen aan groep
	#
	echo 'sudo usermod -a -G microk8s vagrant' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[4] Directory Kube 
	#
	echo 'sudo mkdir /home/vagrant/.kube' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'sudo chown -f -R vagrant ~/.kube' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[5] Installatie KubeCTL
	#	https://anaisurl.com/kubernetes-kubectl-microk8s/
	#
	echo 'sudo snap install kubectl --classic > /dev/null 2>&1' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[6] Configuratie KubeCTL MicroK8S
	#	https://anaisurl.com/kubernetes-kubectl-microk8s/
	#
	echo 'sudo microk8s config > /home/vagrant/.kube/config' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'kubectl config use-context microk8s' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[7] Installatie KubeAdm
	#
	echo 'sudo snap install kubeadm --classic > /dev/null 2>&1' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[8] Enable van Add-Ons op MicroK8S
	echo 'sudo microk8s enable dashboard' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'sudo microk8s enable dns' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'sudo microk8s enable hostpath-storage' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	#	[9] DEMO Deployment van NGINX op MicroK8S
	#	https://thenewstack.io/kubernetes-101-deploy-your-first-application-with-microk8s/
	#
	echo 'kubectl create deployment nginx-webserver --image=nginx' > /home/vagrant/microk8s_demos/nginx/microK8s_nginx_webserver.sh
	echo 'kubectl expose deployment nginx-webserver --type="NodePort" --port 80' >> /home/vagrant/microk8s_demos/nginx/microK8s_nginx_webserver.sh
	echo 'kubectl get svc nginx-webserver' >> /home/vagrant/microk8s_demos/nginx/microK8s_nginx_webserver.sh
	chmod +x /home/vagrant/microk8s_demos/nginx/microK8s_nginx_webserver.sh
	#
	#	[10] DEMO Deployment van NGINX op MicroK8S met 4 replicas 
	#	https://kubernetes.io/docs/tasks/run-application/run-stateless-application-deployment/
	#
	echo 'kubectl apply -f https://k8s.io/examples/application/deployment-scale.yaml' > /home/vagrant/microk8s_demos/nginx/microK8s_nginx_4_replicas.sh
	echo 'kubectl expose deployment nginx-deployment --type="NodePort" --port 80' >> /home/vagrant/microk8s_demos/nginx/microK8s_nginx_4_replicas.sh
	echo 'kubectl get svc nginx-deployment' >> /home/vagrant/microk8s_demos/nginx/microK8s_nginx_4_replicas.sh
	chmod +x /home/vagrant/microk8s_demos/nginx/microK8s_nginx_4_replicas.sh
	#
	#	[11] DEMO Deployment van MySQL 
	#	https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/
	#
	echo 'kubectl apply -f https://k8s.io/examples/application/mysql/mysql-pv.yaml' > /home/vagrant/microk8s_demos/mysql/microK8s_mysql_single.sh
	echo 'kubectl apply -f https://k8s.io/examples/application/mysql/mysql-deployment.yaml' >> /home/vagrant/microk8s_demos/mysql/microK8s_mysql_single.sh
	echo 'kubectl describe deployment mysql' >> /home/vagrant/microk8s_demos/mysql/microK8s_mysql_single.sh
	echo 'kubectl describe pvc mysql-pv-claim' >> /home/vagrant/microk8s_demos/mysql/microK8s_mysql_single.sh
	echo 'kubectl get pods -l app=mysql' >> /home/vagrant/microk8s_demos/mysql/microK8s_mysql_single.sh
	chmod +x /home/vagrant/microk8s_demos/mysql/microK8s_mysql_single.sh
	#
	#	Herstarten om autorisatie MicroK8S voor gebruiker vagrant te laden
	#
	echo 'echo Restart of this virtual machine started' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'echo use vagrant ssh $HOSTNAME after reboot to return to virtual machine again' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	echo 'sudo shutdown -r now' >> /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
	#
	sudo chmod +x /home/vagrant/scripts/microk8s_scripts/microK8s-linux-install.sh
SCRIPT
#
#
# 	[1d-2] 	MinIO ADD-ON op MicroK8S enable 
#
#
$minio_microk8s_config = <<SCRIPT
	#
	#! /bin/bash
	#
	# mkdir /home/vagrant/scripts/minio_scripts > /dev/null 2>&1
	#
	# create script 
	echo 'sudo microk8s enable minio ' >> /home/vagrant/scripts/minio_scripts/minio_microk8s_config.sh
	sudo chmod +x /home/vagrant/scripts/minio_scripts/minio_microk8s_config.sh
SCRIPT
#
#
#	[1e]	DOCKER en DOCKER COMPOSE RUNs
#
#
#	[1e-1]	DOCKER RUN ODOO
#
$odoo_docker_compose = <<SCRIPT
	#
	#! /bin/bash
	#
	#	Directory maken voor script
	#
	# mkdir /home/vagrant/docker-compose > /dev/null 2>&1
	# mkdir /home/vagrant/docker-compose/odoo > /dev/null 2>&1
	#
	#	Directories maken voor Docker Compose YAML
	#
	# mkdir /home/vagrant/data > /dev/null 2>&1					
	# mkdir /home/vagrant/data/odoo			
	# mkdir /home/vagrant/data/odoo/postgresql	
	# mkdir /home/vagrant/data/odoo/addons
	# mkdir /home/vagrant/data/odoo/etc
	#
	#	Downloaden Odoo Docker Compose YAML vanaf GitHUB JATutert
	#
	sudo curl -s -o /home/vagrant/docker-compose/odoo/docker-compose.yml https://raw.githubusercontent.com/jatutert/docker-compose-yaml/main/docker-compose-odoo-vagrant.yml  
	#
	#	Script maken voor starten Docker Compose met Odoo YAML (GitHUB)
	#
	echo '#! /bin/bash' > /home/vagrant/docker-compose/odoo/docker-compose-odoo.sh
	echo '#' >> /home/vagrant/docker-compose/odoo/docker-compose-odoo.sh
	echo 'cd /home/vagrant' >> /home/vagrant/docker-compose/odoo/docker-compose-odoo.sh
	echo 'docker compose -f /home/vagrant/odoo/docker-compose.yml up --quiet-pull -d' >> /home/vagrant/docker-compose/odoo/docker-compose-odoo.sh
	echo 'echo Odoo port 10016' >> /home/vagrant/docker-compose/odoo/docker-compose-odoo.sh
	echo 'echo Chat port 20016' >> /home/vagrant/docker-compose/odoo/docker-compose-odoo.sh
	chmod +x /home/vagrant/docker-compose/odoo/docker-compose-odoo.sh
	#
SCRIPT
#
#
#	[1e-2]	DOCKER COMPOSE NextCloud 
#
#
$nextcloud_docker_compose = <<SCRIPT
	#
	#
	#	https://dev.to/natanielchng/a-step-by-step-guide-to-building-your-private-cloud-with-nextcloud-2023-em5
	#
	#
	#! /bin/bash
	#
	#	Directory maken voor Script
	#
	# mkdir /home/vagrant/docker-compose > /dev/null 2>&1	
	# mkdir /home/vagrant/docker-compose/nextcloud > /dev/null 2>&1
	#
	#	Directories maken voor Docker Compose YAML
	#
	# mkdir /home/vagrant/data > /dev/null 2>&1
	# mkdir /home/vagrant/data/nextcloud > /dev/null 2>&1				
	# mkdir /home/vagrant/data/nextcloud/html > /dev/null 2>&1
	# mkdir /home/vagrant/data/nextcloud/html/data > /dev/null 2>&1
	#
	#	Downloaden NextCloud Docker Compose YAML vanaf GitHUB JATutert
	#
	sudo curl -s -o /home/vagrant/docker-compose/nextcloud/docker-compose.yml https://raw.githubusercontent.com/jatutert/docker-compose-yaml/main/docker-compose-nextcloud-vagrant.yml
	#
	#	Script maken voor starten Docker Compose met NextCloud YAML (GitHUB)
	#
	echo '#! /bin/bash' > /home/vagrant/docker-compose/nextcloud/docker-compose-nextcloud.sh
	echo '#' >> /home/vagrant/docker-compose/nextcloud/docker-compose-nextcloud.sh
	echo 'cd /home/vagrant' >> /home/vagrant/docker-compose/nextcloud/docker-compose-nextcloud.sh
	echo 'docker compose -f /home/vagrant/docker-compose/nextcloud/docker-compose.yml up --quiet-pull -d' >> /home/vagrant/docker-compose/nextcloud/docker-compose-nextcloud.sh
	echo 'echo NextCloud port 8888'	>> /home/vagrant/docker-compose/nextcloud/docker-compose-nextcloud.sh
	chmod +x /home/vagrant/docker-compose/nextcloud/docker-compose-nextcloud.sh
	#
SCRIPT
#
#
#	[1f]	Installatie services 
#
#
#	[1f-1]	Cockpit Intallatie (draait op poort 9090)
#
#
$cockpit_install = <<SCRIPT
	#!/bin/bash
	#
	sudo apt-get install cockpit -y > /dev/null 2>&1
	sudo systemctl enable --now cockpit.socket > /dev/null 2>&1
	#
	#	Aanpassen port van 9090 naar 1234
	#
	sudo mkdir -p /etc/systemd/system/cockpit.socket.d/	> /dev/null 2>&1
	echo '[Socket]' > /etc/systemd/system/cockpit.socket.d/listen.conf 
	echo 'ListenStream=' >> /etc/systemd/system/cockpit.socket.d/listen.conf 
	echo 'ListenStream=1234' >> /etc/systemd/system/cockpit.socket.d/listen.conf 
	sudo systemctl daemon-reload
	sudo systemctl restart cockpit.socket
	#
SCRIPT
#
#
#	[1g]	Scripts voor Alvistack VM met Kubernetes 
#
#	[1g-1]	Kubernetes rechten configuratie voor huidige gebruiker 
#
$alvistack_k8s_rechten_config = <<SCRIPT
	#
	#
	#!/bin/bash
	echo '#!/bin/bash' 													 > /home/vagrant/alvistack_k8s_rechten_config
	#
	#
	#	Rechten goed zetten voor huidige gebruiker
	#	https://www.nakivo.com/blog/install-kubernetes-ubuntu/
	#
	echo 'mkdir -p $HOME/.kube' 										>> /home/vagrant/alvistack_k8s_rechten_config
	echo 'sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config' 	>> /home/vagrant/alvistack_k8s_rechten_config
	echo 'sudo chown $(id -u):$(id -g) $HOME/.kube/config' 				>> /home/vagrant/alvistack_k8s_rechten_config
	#
	#
	#
	#
	sudo chmod +x /home/vagrant/alvistack_k8s_rechten_config
SCRIPT
#
#
#	[1g-2]	Installatie en configuratie van MinIO Operatator en MinIO Tentant op Kubernetes
#	
#	Operator = basis
#	Tentant draait op Operator 
#
$alvistack_k8s_minio_config = <<SCRIPT
	#
	#
	#	MinIO Object Storage for Kubernetes (manier 1) 
	#	https://min.io/docs/minio/kubernetes/upstream/index.html
	#
	#
	#!/bin/bash
	echo '#!/bin/bash' > /home/vagrant/minio_k8s_config.sh
	#
	#	=====================================
	#	OPERATOR (basis voor latere tentants)
	#	Zie https://operator.min.io/
	#
	#	The MinIO Operator brings native support for deploying and managing MinIO deployments (“MinIO Tenants”) on a Kubernetes cluster.
	#	https://artifacthub.io/packages/olm/community-operators/minio-operator
	#	=====================================
	#
	#	1) 	Install the MinIO Kubernetes Plugin
	#	========================================
	#
	#	The following code downloads the latest stable version 5.0.7 of the MinIO Kubernetes plugin and installs it to the system path:
	#
	#	echo 'wget https://github.com/minio/operator/releases/download/v5.0.7/kubectl-minio_5.0.7_linux_amd64'	>> /home/vagrant/minio_k8s_config.sh
	echo 'mkdir /home/vagrant/tmp' >> /home/vagrant/minio_k8s_config.sh
	echo 'curl -o /home/vagrant/tmp/kubectl-minio https://github.com/minio/operator/releases/download/v5.0.7/kubectl-minio_5.0.7_linux_amd64'	>> /home/vagrant/minio_k8s_config.sh
	#	echo 'mv kubectl-minio_5.0.7_linux_amd64 kubectl-minio'	>> /home/vagrant/minio_k8s_config.sh
	echo 'chmod +x /home/vagrant/tmp/kubectl-minio' >> /home/vagrant/minio_k8s_config.sh
	echo 'sudo mv /home/vagrant/tmp/kubectl-minio /usr/local/bin/' >> /home/vagrant/minio_k8s_config.sh
	#
	#
	#
	#	2)	Initialize the MinIO Kubernetes Operator
	#	=============================================
	#
	echo kubectl minio init 								>> /home/vagrant/minio_k8s_config.sh
	#
	#
	#	3) Validate the Operator Installation
	#	=============================================
	#
	echo kubectl get all --namespace minio-operator			>> /home/vagrant/minio_k8s_config.sh
	#
	#
	#
	#	=====================================
	#	TENANTS
	#	Zie https://operator.min.io/
	#	=====================================
	#	
	#
	chmod +x /home/vagrant/minio_k8s_config.sh
SCRIPT
#
#
#	############################################# BUITEN GEBRUIK ###########################################
#
#	[1z]	Scripts die NIET meer gebruikt worden
#
#
# 	[1z-1] 	Datapacket Repo
#
#
$datapacket_repo = <<SCRIPT
	#!/bin/bash
	#
	# Reposity Nederland Datapacket toevoegen aan /etc/apt/sources.list bestand binnen Ubuntu Linux.   
	#
	sudo add-apt-repository "deb http://mirror.nl.datapacket.com/ubuntu $(lsb_release -sc) universe"
	#
	# [OPTIE] [Vervangen standaard (mirros.edge.kernel.org) door nl.archive.ubuntu.com 
	# [OPTIE #1] echo "sudo sed 's@mirrors.edge.kernel.org@nl.archive.ubuntu.com@' -i /etc/apt/sources.list" >> /directory/file
	# [OPTIE #2] sudo sed 's@mirrors.edge.kernel.org@mirror.nl.datapacket.com@' -i /etc/apt/sources.list
	#
	sudo apt-get update
	#
SCRIPT
#
#
# 	[1z-2] Docker Repo
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
$docker_repo = <<SCRIPT
	#!/bin/bash
	#
	# Repository toevoegen, zodat DOCKER-CE vervolgens geïnstalleerd kan worden m.b.t. commando binnen shell of via script. 
	#
	sudo apt-get install -y ca-certificates curl gnupg
	sudo install -m 0755 -d /etc/apt/keyrings
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
	sudo chmod a+r /etc/apt/keyrings/docker.gpg
	echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
SCRIPT
#
#
# 	[1z-3] Docker rechten
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
#
$docker_rechten = <<SCRIPT
	#
	# Aanmaken docker_rechten Script
	#
	#!/bin/bash
	echo '#!/bin/bash' > /home/vagrant/docker-rechten.sh
	echo '#' >> /home/vagrant/docker-rechten.sh
	echo '# Docker Rechten Configuratie' >> /home/vagrant/docker-rechten.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/docker-rechten.sh
	echo '#' >> /home/vagrant/docker-rechten.sh
	# 
	# ################################################################################################################
	#
	# usermod (https://linuxize.com/post/usermod-command-in-linux/) 
	#
	# sudo usermod -g GROUP USER
	# To change a user’s primary group, invoke the usermod command with by the -g option followed the group’s name and the username:
	#
	# usermod -a -G GROUP USER
	# To add an existing user to a secondary group, use the -a -G options followed the group’s name and the username
	#
	#
	#
	#
	# C:\HashiCorp\Vagrant\embedded\gems\gems\vagrant-2.3.7\plugins\provisioners\docker\cap\linux\docker_configure_vagrant_user.rb
	# Commando in dit bestand: sudo usermod -a -G docker 
	# 
	# ################################################################################################################
	#
	#
	# Bestaande gebruiker Vagrant toevoegen aan een Secondary Group
	echo sudo usermod -a -G docker vagrant >> /home/vagrant/docker-rechten.sh
	#
	#
	echo '# Melding' >> /home/vagrant/docker-rechten.sh
	echo echo Doe eventueel een reboot via shutdown -r now of logout om rechten actief te maken >> /home/vagrant/docker-rechten.sh
	#
	chmod +x /home/vagrant/docker-rechten.sh
SCRIPT
#
#
#	[1z-4] Docker_installatie [Alleen getest op Ubuntu 22.10]
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
#
$docker_installatie = <<SCRIPT
	#
	# Aanmaken docker_installatie Script
	#
	#!/bin/bash
	echo '#!/bin/bash'  > /home/vagrant/docker_installatie.sh
	echo '#' >> /home/vagrant/docker_installatie.sh
	echo '# Vagrant Docker-CE Installatie' >> /home/vagrant/docker_installatie.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/docker_installatie.sh
	echo '#' >> /home/vagrant/docker_installatie.sh
	echo sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin >> /home/vagrant/docker_installatie.sh
	echo '#' >> /home/vagrant/docker_installatie.sh
	echo '# Gebruiker Vagrant toevoegen aan groep docker' 	>> /home/vagrant/docker_installatie.sh
	echo sudo usermod -a -G docker vagrant 					>> /home/vagrant/docker_installatie.sh
	chmod +x /home/vagrant/docker_installatie.sh
SCRIPT
#
#
# 	[1z-5] Docker_install [HashiCorp Vagrant] 
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
#	Inspiratie: 
# 	C:\HashiCorp\Vagrant\embedded\gems\gems\vagrant-2.3.7\plugins\provisioners\docker\cap\debian\docker_install.rb
#
#
$docker_hashicorp_install = <<SCRIPT
	#
	# Aanmaken docker_installatie Script
	#
	#!/bin/bash
	echo '#!/bin/bash' > /home/vagrant/docker_hashicorp_install.sh
	echo '#' >> /home/vagrant/docker_hashicorp_install.sh
	echo '# Vagrant Docker-CE Installatie' >> /home/vagrant/docker_hashicorp_install.sh
	echo '# HashiCorp' >> /home/vagrant/docker_hashicorp_install.sh
	echo '#' >> /home/vagrant/docker_hashicorp_install.sh
	echo apt-get update -qq -y >> /home/vagrant/docker_hashicorp_install.sh
	echo apt-get install -qq -y --force-yes curl apt-transport-https 	>> /home/vagrant/docker_hashicorp_install.sh
	echo apt-get purge -qq -y lxc-docker* || true >> /home/vagrant/docker_hashicorp_install.sh
	echo curl -sSL https://get.docker.com/ | sh >> /home/vagrant/docker_hashicorp_install.sh
	echo service docker start >> /home/vagrant/docker_hashicorp_install.sh
	echo '#' >> /home/vagrant/docker_hashicorp_install.sh
	echo sudo usermod -a -G docker vagrant >> /home/vagrant/docker_hashicorp_install.sh
	chmod +x /home/vagrant/docker_hashicorp_install.sh
SCRIPT
#
#
#	[1z-6]	Kubernetes_installatie 
#
#	Wordt niet meer gebruikt ivm Alvistack Kubernetes BOX/VM
#
#
$kubernetes_config = <<SCRIPT
	#
	#
	#!/bin/bash
	#	echo '#!/bin/bash'                        	 	    				 > /home/vagrant/kubernetes_config.sh
	#
	#
	# 	SWAP uitzetten
	#	https://www.nakivo.com/blog/install-kubernetes-ubuntu/
	#
	#
	#	sudo swapoff -a
	#	sudo sed -i ‘/ swap / s/^\(.*\)$/#\1/g’ /etc/fstab
	#	sudo echo “vm.swappiness=0” | sudo tee –append /etc/sysctl.conf
	#	sudo sysctl -p
	#
	# 	Installatie Kubernetes
	#	https://www.nakivo.com/blog/install-kubernetes-ubuntu/
	#
	#	echo ‘deb http://apt.kubernetes.io/ kubernetes-xenial main’ | sudo tee /etc/apt/sources.list.d/kubernetes.list
	#	sudo apt-get update
	#	## werkt niet ## sudo apt-get install -y kubelet kubeadm kubectl
	#
	#	Installatie Keepalive Deamon 
	#	https://www.nakivo.com/blog/install-kubernetes-ubuntu/
	#
	# 	sudo apt-get install keepalived
	# 	sudo systemctl enable keepalived && systemctl start keepalived
	# 	kubeadm init –pod-network-cidr=10.244.0.0/16 –apiserver-advertise-address=192.168.101.21
	#
	#	Rechten goed zetten voor huidige gebruiker
	#	https://www.nakivo.com/blog/install-kubernetes-ubuntu/
	#
	#	echo 'mkdir -p $HOME/.kube'											>> /home/vagrant/kubernetes_config.sh
	#	echo 'sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config'		>> /home/vagrant/kubernetes_config.sh
	#	echo 'sudo chown $(id -u):$(id -g) $HOME/.kube/config'				>> /home/vagrant/kubernetes_config.sh
	#
	#
	#	chmod +x /home/vagrant/kubernetes_config.sh
SCRIPT
#
#
#
#
#	######################
# 	[2]	WINDOWS
#	######################
#
#
# [2a] Scripts die ALTIJD uitgevoerd worden bij eerste start van VM
#
#
# [2a-1] Installatie WinGET
#
#
$winget_installatie = <<SCRIPT
	# REM powershell -ExecutionPolicy Unrestricted 
	# REM powershell -file ps-winget.ps1
SCRIPT
#
# [2b] Scripts die aangemaakt worden, maar later handmatig gestart moeten worden
#
$win_script_aanmaak = <<SCRIPT
	# REM powershell -ExecutionPolicy Unrestricted 
	# REM powershell -file ps-winget.ps1
SCRIPT
#
#
#
#
#
# ############################################ [Virtuele Machines] ##########################################
#
#
#
#
Vagrant.configure("2") do |config|
	#
	#
	#
	# Melding komt elke keer in beeld bij commando met Vagrant ervoor
	# puts "tekst tekst tekst tekst"
	#
	#
	# ############################################ [Oracle / VMware] ##########################################
	#
	#
	#
	#	
	#
	# ####################################
	#              UBUNTU
	# ####################################
	#
	#
	#
	#
	ubuntu_machines.each do |machine|
		config.vm.define machine[:hostname] do |ulxnode|
			#
			ulxnode.vm.box 				= machine[:box]
			ulxnode.vm.box_check_update	= false
			ulxnode.vm.hostname 		= "#{machine[:hostname].downcase}"
			#
			# ulxnode.ssh.username = "vagrant"
			# ulxnode.ssh.password = "vagrant"
			#
			#
			# ####################################################################	
			#
			#	Network
			#
			#	Adapters
			#
			#	Adapter 2 Host-Only	
			#
			#	Oracle Virtualbox fixed IP-address
			#
			if machine[:aanbieder] == "Oracle"
				ulxnode.vm.network "private_network", ip: "#{machine[:ip]}", netmask: "255.255.255.0"
			end
			#
			#	VMware Workstation / Fusion PRO DHCP IP-address
			#
			if machine[:aanbieder] == "VMware"
				ulxnode.vm.network "private_network", type: "dhcp"			
			end
			#
			#
			# 	Adapter 3 Bridged
			# 	ulxnode.vm.network "public_network", bridge: "VMware Virtual Ethernet Adapter for VMnet8"
			# 	ulxnode.vm.network "public_network", bridge: "Ethernet"
			#
			#	Port Forwarding
			#	ulxnode.vm.network :forwarded_port, guest: 3389, host: 53389, auto_correct: true
			ulxnode.vm.network :forwarded_port, guest: 80, host: 80, auto_correct: true, id: "webserver"
			ulxnode.vm.network :forwarded_port, guest: 1234, host: 1234, auto_correct: true, id: "cockpit"
			ulxnode.vm.network :forwarded_port, guest: 8080, host: 8080, auto_correct: true, id: "webserver"
			ulxnode.vm.network :forwarded_port, guest: 8888, host: 8888, auto_correct: true, id: "nextcloud"
			ulxnode.vm.network :forwarded_port, guest: 9000, host: 9000, auto_correct: true, id: "minio-api"
			ulxnode.vm.network :forwarded_port, guest: 9001, host: 9001, auto_correct: true, id: "minio-console`"
			ulxnode.vm.network :forwarded_port, guest: 9090, host: 9090, auto_correct: true, id: "minio-operator"
			#	ulxnode.vm.network :forwarded_port, guest: 10000, host: 10000, auto_correct: true, id: "webmin"
			#
			# ####################################################################
			#
			# ####################################################################		
			# https://developer.hashicorp.com/vagrant/docs/synced-folders/basic_usage
			#
			# 	Windows
			# 	https://ss64.com/nt/syntax-variables.html
			#
			if #{ENV['OS']} == "Windows_NT" 
				ulxnode.vm.synced_folder "C://Users//#{ENV['USERNAME']}", "/home/#{ENV['USERNAME']}"
				ulxnode.vm.synced_folder "#{ENV['USERPROFILE']}//Downloads", "/home/vagrant/downloads"
				ulxnode.vm.synced_folder "#{ENV['USERPROFILE']}//Documents", "/home/vagrant/documents"
			end 
			#
			# 	macOS
			#	https://ss64.com/osx/syntax-env_vars.html
			#
			# 	node.vm.synced_folder "#{ENV['HOME']}", "/home/#{ENV['USER']}"
			# 	node.vm.synced_folder "#{ENV['TMPDIR']}", "/home/vagrant/downloads"
			# 	node.vm.synced_folder "#{ENV['HOME']}", "/home/vagrant/documents"
			#
			# ####################################################################
			#
			ulxnode.vm.post_up_message = "Start scripts in /home/vagrant/scripts voor verdere configuratie"
			#
			# ####################################################################
			# Installatie Docker-CE en Compose plugin
			# Eventueel pull images
			#
			# https://developer.hashicorp.com/vagrant/docs/provisioning/docker
			#
			# C:\HashiCorp\Vagrant\embedded\gems\gems\vagrant-2.3.7\plugins\provisioners\docker\cap\debian
			#		
			if machine[:ram] >= 4096 && machine[:os] == "ubuntu" && machine[:osversie] == 2204
				#
				#	https://www.rubyguides.com/ruby-tutorial/ruby-if-else/
				#
				ulxnode.vm.provision "docker" do |d|
					d.pull_images "hello-world"
					d.pull_images "prakhar1989/static-site"
					d.pull_images "alpine" 		
					d.pull_images "registry"
				end
			end
			#
			#
			if machine[:ram] >= 8192 && machine[:os] == "ubuntu" && machine[:osversie] == 2204
				#	https://www.rubyguides.com/ruby-tutorial/ruby-if-else/
				ulxnode.vm.provision "docker" do |d|
					d.pull_images "odoo:latest"
					d.pull_images "nextcloud"
					d.pull_images "mariadb:10.6"
					d.pull_images "postgres:latest"
					d.pull_images "minio/minio"
				end
			end
			#
			#
			# ####################################################################
			# Installatie Ansible + uitvoeren playbook.yml
			#
			# ulxnode.vm.provision "ansible_local" do |ansible|
			#	ansible.playbook = "playbook.yml"
			# end
			#
			# ####################################################################
			#
			#
			#	Oracle Virtualbox
			#
			#
			if machine[:aanbieder] == "Oracle"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/virtualbox
				#
				ulxnode.vm.provider "virtualbox" do |ovbvm|
					#
					ovbvm.gui 			= true
					ovbvm.linked_clone 	= false
					#
					ovbvm.cpus 			= "#{machine[:cpu]}"
					ovbvm.memory 		= "#{machine[:ram]}"
					ovbvm.name 			= "#{machine[:hostname]}"
					#
					ovbvm.customize ["modifyvm", :id, "--vram", "128"]
					ovbvm.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--description", "#{machine[:os]} #{machine[:osversie]} \r\n Used box is #{machine[:box]} \r\n Created on #{cur_date} by Vagrant \r\n Username/Password = vagrant \r\n Use VAGRANT up #{machine[:hostname]} to boot this virtual machine"]
					#
				end
			end	
			#
			#
			#	VMware Workstation / Fusion PRO
			#
			#
			if machine[:aanbieder] == "VMware"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/vmware
				#			
				ulxnode.vm.provider "vmware_desktop" do |vmwvm|
					#
					vmwvm.gui 			= true
					vmwvm.linked_clone 	= false
					#
					vmwvm.cpus 			= "#{machine[:cpu]}"
					vmwvm.memory 		= "#{machine[:ram]}"
					# vmwvm.nat_device 	= "VMnet8"
					#
					# Aanpassen VMware Workstation/Fusion Pro VMX 
					#
					vmwvm.vmx["tools.syncTime"] 	= "TRUE"
					vmwvm.vmx["displayName"] 		= "#{machine[:hostname]}"
					vmwvm.vmx["annotation"] 		= "#{machine[:os]} #{machine[:osversie]} |0D|0AUsed box is #{machine[:box]} |0D|0ACreated on #{cur_date} by Vagrant |0D|0AUsername/Password = vagrant |0D|0AUse VAGRANT up #{machine[:hostname]} to boot this virtual machine"
				end
			end	
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Message of the day (MOTD) aanpassen 
			#
			#	-----------------------------------------------------
			ulxnode.vm.provision "shell", inline: <<-SHELL
				#
				# linux_distributie==$(lsb_release -is)
				# linux_distributie_versie=$(lsb_release -ds)
				#
				PRETTY_NAME=$(grep -oP '(?<=^PRETTY_NAME=).+' /etc/os-release | tr -d '"')
				NAME=$(grep -oP '(?<=^NAME=).+' /etc/os-release | tr -d '"')
				VERSION=$(grep -oP '(?<=^VERSION=).+' /etc/os-release | tr -d '"')
				VERSION_ID=$(grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"')
				VERSION_CODENAME=$(grep -oP '(?<=^VERSION_CODENAME=).+' /etc/os-release | tr -d '"')
				#
				echo 'Welcome to' $NAME $VERSION 'created' #{cur_date} 'by Vagrant' | sudo tee /etc/motd > /dev/null
				# sudo echo "Welcome to #{machine[:os]} version #{machine[:osversie]} created #{cur_date}" | sudo tee /etc/motd
				#
			SHELL
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Tijdzone aanpassen
			#
			#	-----------------------------------------------------
			ulxnode.vm.provision "shell", inline: <<-SHELL
				sudo timedatectl set-timezone Europe/Amsterdam
				sudo timedatectl
				#
			SHELL
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Ubuntu INIT
			#	Ubuntu 20.04 / 22.04 / 22.10 / 23.04 
			#	-----------------------------------------------------
			if machine[:ram] >= 2048 && machine[:os] == "ubuntu"
				# 	Script voor het maken van directory structuur
				ulxnode.vm.provision "shell", inline: $maak_directory_structuur
				#	Script voor het aanpassen van repo naar NL
				ulxnode.vm.provision "shell", inline: $ubuntu_init_change_repo
				#	Script voor het updaten van Ubuntu mbv APT
				ulxnode.vm.provision "shell", inline: $ubuntu_init_upgrade_os  
				#	Script voor installatie van aantal handige utils binnen Ubuntu
				ulxnode.vm.provision "shell", inline: $ubuntu_init_install_utils
				#	Script voor uitvoeren van de 3 bovenstaande scripts in 1 keer
				ulxnode.vm.provision "shell", inline: $ubuntu_init_script
			end
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Cockpit	
			#	Ubuntu 20.04 / 22.04 / 22.10 / 23.04 
			#	-----------------------------------------------------
			if machine[:ram] >= 2048 && machine[:os] == "ubuntu"
				# 	Script voor installatie van Cockpit (draait op poort 1234)
				ulxnode.vm.provision "shell", inline: $cockpit_install
			end
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Docker / Docker Compose
			#	Ubuntu 22.04
			#	-----------------------------------------------------
			if machine[:ram] >= 4096 && machine[:os] == "ubuntu" && machine[:osversie] == 2204
				#	Script voor het aanmaken van docker-compose.yml in directory nextcloud 
				ulxnode.vm.provision "shell", inline: $nextcloud_docker_compose
				# 	script voor het aanmaken van docker-compose.yml in directory odoo
				ulxnode.vm.provision "shell", inline: $odoo_docker_compose

			end
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Kubernetes
			#	Ubuntu 22.04 
			#	-----------------------------------------------------
			if machine[:ram] >= 8192 && machine[:os] == "ubuntu" && machine[:osversie] == 2204
				#	Script voor installatie MiniKube binnen VM 
				ulxnode.vm.provision "shell", inline: $minikube_install
				#	Script voor installatie van MicroK8S (Kubernetes voor standalone PC/Laptop)
				ulxnode.vm.provision "shell", inline: $microK8S_install
			end
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	MinIO
			#	Ubuntu 22.04 
			#	-----------------------------------------------------
			if machine[:ram] >= 8192 && machine[:os] == "ubuntu" && machine[:osversie] == 2204 
				#	Script voor MinIO in Docker Containers 
				ulxnode.vm.provision "shell", inline: $minio_docker_run
				#	Script voor MinIO native installatie op Linux (niet voor K8S of MicroK8S)
				ulxnode.vm.provision "shell", inline: $minio_linux_run
				#	Script voor enable minio add-on op microk8s
				ulxnode.vm.provision "shell", inline: $minio_microk8s_config
			end
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Infrastructure As Code (IAC) Ansible / TerraForm
			#	Ubuntu 22.04 
			#	-----------------------------------------------------
			if machine[:ram] >= 4096 && machine[:os] == "ubuntu" && machine[:osversie] == 2204
				#	Script voor installatie Ansible Controller 
				ulxnode.vm.provision "shell", inline: $ansible_install
				#	Script voor instalatie Terraform
				ulxnode.vm.provision "shell", inline: $terraform_install
			end
			#	-----------------------------------------------------
			#
			#	Provision
			#
			#	Introductie Infrastructuren
			#	Ubuntu 20.04 
			#	-----------------------------------------------------
			if machine[:ram] >= 4096 && machine[:os] == "ubuntu" && machine[:osversie] == 2004
				ulxnode.vm.provision "shell", inline: <<-SHELL
					mkdir /home/vagrant/intro_infra
					curl -o /home/vagrant/intro_infra/install-mysqlserver.sh 	https://raw.githubusercontent.com/msiekmans/linux-server-scripts/main/install-mysqlserver.sh
					curl -o /home/vagrant/intro_infra/install-webserver.sh 		https://raw.githubusercontent.com/msiekmans/linux-server-scripts/main/install-webserver.sh
					curl -o /home/vagrant/intro_infra/install-sftpserver.sh		https://raw.githubusercontent.com/msiekmans/linux-server-scripts/main/install-sftpserver.sh
					chmod +x /home/vagrant/intro_infra/install-mysqlserver.sh
					chmod +x /home/vagrant/intro_infra/install-webserver.sh
					chmod +x /home/vagrant/intro_infra/install-sftpserver.sh
				SHELL
			end
			#	-----------------------------------------------------
			# 	Always 
			#
			#	Variabelen vullen met data over Ubuntu
			#	-----------------------------------------------------
			ulxnode.vm.provision "shell", run: "always", inline: <<-SHELL
				#
				# sudo echo "The used Vagrantfile is for private or educational use only !" | sudo tee /etc/motd
				#
				PRETTY_NAME=$(grep -oP '(?<=^PRETTY_NAME=).+' /etc/os-release | tr -d '"')
				NAME=$(grep -oP '(?<=^NAME=).+' /etc/os-release | tr -d '"')
				VERSION=$(grep -oP '(?<=^VERSION=).+' /etc/os-release | tr -d '"')
				VERSION_ID=$(grep -oP '(?<=^VERSION_ID=).+' /etc/os-release | tr -d '"')
				VERSION_CODENAME=$(grep -oP '(?<=^VERSION_CODENAME=).+' /etc/os-release | tr -d '"')
				#
				#
			SHELL
			#	-----------------------------------------------------
			#	Always
			#
			#	Ubuntu INIT
			#	Ubuntu 20.04 / 22.04 / 22.10 / 23.04 
			#	-----------------------------------------------------
			if machine[:ram] >= 2048 && machine[:os] == "ubuntu"
				# 	Script voor het maken van directory structuur
				ulxnode.vm.provision "shell", inline: $maak_directory_structuur
				#	Script voor het aanpassen van repo naar NL
				ulxnode.vm.provision "shell", inline: $ubuntu_init_change_repo
				#	Script voor het updaten van Ubuntu mbv APT
				ulxnode.vm.provision "shell", inline: $ubuntu_init_upgrade_os  
				#	Script voor installatie van aantal handige utils binnen Ubuntu
				ulxnode.vm.provision "shell", inline: $ubuntu_init_install_utils
				#	Script voor uitvoeren van de 3 bovenstaande scripts in 1 keer
				ulxnode.vm.provision "shell", inline: $ubuntu_init_script
			end
		end
	end
	#
	#
	#
	#
	#
	# #########################################
	# ###             Windows               ###
	# #########################################
	# 
	#
	#
	#
	windows_machines.each do |machine|
		config.vm.define machine[:hostname] do |winnode|
			#
			winnode.vm.box = machine[:box]
			winnode.vm.box_check_update = true
			#
			winnode.vm.hostname 		= "Vagrant-#{machine[:hostname]}"
			winnode.vm.guest 			= :windows
			winnode.vm.boot_timeout 	= 18000
			#
			winnode.winssh.shell 		= "cmd" 		# The shell to use when executing SSH commands from Vagrant. By default this is powershell. Valid values are "cmd" or "powershell".		
			#
			#	winnode.ssh.username 		= "vagrant"
			#	winnode.ssh.password 		= "vagrant"
			#
			# ####################################################################	
			#
			#	Network
			#
			#	Adapters
			#
			#	Adapter 2 Host-Only	
			winnode.vm.network "private_network", type: "dhcp"
			#	node.vm.network "private_network", ip: "192.168.56.220", netmask: "255.255.255.0"
			#
			# 	Adapter 3 Bridged
			# node.vm.network "public_network", bridge: "VMware Virtual Ethernet Adapter for VMnet8"
			# node.vm.network "public_network", bridge: "Ethernet"
			#
			#	Port-Forwarding
			#
			winnode.vm.network :forwarded_port, guest: 3389, host: 53389, auto_correct: true
			# node.vm.network "forwarded_port", guest: 3389, host: 3389, id: "rdp", auto_correct: true  [automatisch aan]
			# node.vm.network "forwarded_port", guest: 5985, host: 5985, id: "winrm", auto_correct: true [automatisch aan]
			#
			# ####################################################################
			#
			#
			# ####################################################################	
			#	WinRM
			#
			winnode.vm.communicator = "winrm" 	# standaard is ssh windows moet naar winrm
			# vw1Xeval.winrm.username = "IEUser"
			# vw1Xeval.winrm.password = "Passw0rd!"
			# vw1Xeval.winrm.host = "localhost"  	# The hostname or IP to connect to the WinRM service
			winnode.winrm.max_tries = 300 			# The maximum number of times to retry opening a shell after failure. This defaults to 20.
			winnode.winrm.retry_delay = 2 			# The amount of time to wait between retries and defaults to 2 seconds.
			#
			#
			# ####################################################################	
			#
			#
			winnode.vm.post_up_message = "Start scripts in /home/vagrant voor verdere configuratie"
			#	
			#
			#	Oracle Virtualbox
			#
			#
			if machine[:aanbieder] == "Oracle"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/virtualbox
				#
				winnode.vm.provider "virtualbox" do |ovbvm|
					#
					ovbvm.gui 			= true
					ovbvm.linked_clone 	= false
					#
					ovbvm.cpus 			= "#{machine[:cpu]}"
					ovbvm.memory 		= "#{machine[:ram]}"
					ovbvm.name 			= "Vagrant-#{machine[:hostname]}"
					#
					ovbvm.customize ["modifyvm", :id, "--vram", "128"]
					ovbvm.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--description", "Ubuntu 22.04 LTS Gebruiker en Password: vagrant"] 
					#
				end
			end	
			#
			#
			#	VMware Workstation / Fusion PRO
			#
			#
			if machine[:aanbieder] == "VMware"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/vmware
				#			
				winnode.vm.provider "vmware_desktop" do |vmwvm|
					#
					vmwvm.gui 			= true
					vmwvm.linked_clone	= false
					#
					vmwvm.cpus 			= "#{machine[:cpu]}"
					vmwvm.memory 		= "#{machine[:ram]}"
					# vmwvm.nat_device 	= "VMnet8"
					#
					vmwvm.vmx["tools.syncTime"]	= "TRUE"
					vmwvm.vmx["displayName"] 	= "Vagrant-#{machine[:hostname]}"
					vmwvm.vmx["annotation"] 	= "Vagrant-#{machine[:hostname]} |0D|0AUbuntu 22.04.02 LTS |0D|0A |0D|0AUsername/Password = vagrant"
				end
			end	
			#
			winnode.vm.provision "shell", privileged: "true", inline: <<-SHELL
				#
				#
				#
				#
			SHELL
		end
	end
	#
	#
	#
	#
	#
	# ############################################ [VMware Workstation/Fusion PRO] ##########################################
	#
	#
	#
	#	Geen specifieke boxes aanwezig
	#
	#
	#
	# 
	# ############################################ [Oracle Virtualbox] ######################################################
	#
	#
	# ====================================================================================
	# [pov-uld-2204-AS-L-K] 	Alvistack Kubernetes 1.27 (Ubuntu 22.04.3 LTS) 
	# 							https://github.com/alvistack/vagrant-kubernetes
	# ====================================================================================
	#
	#
	#	https://www.linuxtechi.com/install-kubernetes-on-ubuntu-22-04/
	#	https://computingforgeeks.com/install-kubernetes-cluster-ubuntu-jammy/?expand_article=1
	#
	#
	#	Weergave sudo kubeadm join commando: 
	#	sudo kubeadm token create --print-join-command
	#	https://akyriako.medium.com/install-kubernetes-on-ubuntu-20-04-f1791e8cf799
	#
	#
	config.vm.define "pov-uld-2204-AS-L-K" do |pov_uld_2204_AS_L_K|
		#
		pov_uld_2204_AS_L_K.vm.box = "alvistack/kubernetes-1.28"
		pov_uld_2204_AS_L_K.vm.box_check_update = false
		pov_uld_2204_AS_L_K.vm.hostname = "pov-uld-2204-AS-L-K"
		#
		#
		pov_uld_2204_AS_L_K.vm.disk :disk, name: 'sdb', size: '10GB'
		#
		#
		#	############################################
		#
		#	Network
		#
		#
		#	## Adapters
		#
		# 	Adapter 2 (disabled)
		# 	pov_uld_2204_AS_L_K.vm.network "private_network", ip: "192.168.56.210", netmask: "255.255.255.0"
		#
		#
		#	## Port Forwarding
		#
		# 	pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 80, host: 8888, host_ip: "127.0.0.1", protocol: "tcp", id: "webcntr01"	
		#
		#	MinIO Server (API)
		pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 9000, host: 9000, host_ip: "127.0.0.1", protocol: "tcp", id: "miniosrv"
		#	MinIO Console
		pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 9001, host: 9001, host_ip: "127.0.0.1", protocol: "tcp", id: "miniocon"
		#	MinIO
		#	pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 9090, host: 9090, host_ip: "127.0.0.1", protocol: "tcp", id: "minio"
		#
		#	############################################
		#
		#
		#	Synced Folders
		#
		#
		pov_uld_2204_AS_L_K.vm.synced_folder "C://Users//#{ENV['USERNAME']}", "/home/#{ENV['USERNAME']}"
		pov_uld_2204_AS_L_K.vm.synced_folder "#{ENV['USERPROFILE']}//Downloads", "/home/vagrant/downloads"
		pov_uld_2204_AS_L_K.vm.synced_folder "#{ENV['USERPROFILE']}//Documents", "/home/vagrant/documents"
		#
		#
		#
		#	############################################
		#
		#
		# 	Post up message
		#
		#
		pov_uld_2204_AS_L_K.vm.post_up_message = "Start scripts in /home/vagrant voor verdere configuratie"
		#
		#		
		# https://developer.hashicorp.com/vagrant/docs/providers/virtualbox
		pov_uld_2204_AS_L_K.vm.provider "virtualbox" do |pov_uld_2204_AS_L_K_settings|
			#
			pov_uld_2204_AS_L_K_settings.gui 			= true
			pov_uld_2204_AS_L_K_settings.linked_clone 	= false
			#
			pov_uld_2204_AS_L_K_settings.cpus 			= "2"
			pov_uld_2204_AS_L_K_settings.memory 		= "8192"
			pov_uld_2204_AS_L_K_settings.name 			= "pov-uld-2204-AS-L-K"
			#
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--cpu-profile", "host"]
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--vram", "128"]
			#
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
			#
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--description", "Vagrant (alvistack/kubernetes-1.27) Created #{cur_date} Username/Password = vagrant"] 
			#
		end 
		# Scripts die bij eerste start of provision parameter worden uitgevoerd
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: <<-SHELL
			#
			sudo echo "The used Vagrantfile is for private or educational use only !" | sudo tee /etc/motd
			#
			#
		SHELL
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: $ubuntu_repo
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: $ubuntu_upgrade
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: $ubuntu_utils_install
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: $alvistack_k8s_rechten_config
		# Scripts die bij eerste start of provision parameter worden uitgevoerd
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: <<-SHELL
			#
			sudo echo "The used Vagrantfile is for private or educational use only !" | sudo tee /etc/motd
			#
			#
		SHELL
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: $ubuntu_repo
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: $ubuntu_upgrade
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: $ubuntu_utils_install
	end 
	#	
	#
	#
	#
	#
	# ############################################ [Einde Boxes] ######################################################	
	#
	#
end