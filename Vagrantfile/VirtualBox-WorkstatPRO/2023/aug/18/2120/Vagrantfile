# -*- mode: ruby -*-
# vi: set ft=ruby :
#
#
#
#
=begin

Vagrant Configuratie voor Oracle Virtualbox en VMware Workstation/Fusion PRO hypervisors
Vagrant is copyrighted by Hashicorp (www.vagrantup.com)
(C) Copyright 2023 JA Tutert

This configuration may only be used for private use or education use. Business/commercial use is prohibited. 
It is intended for use with virtual machines on a hypervisor and thus not for configuration of bare-metal or cloud machines.


Versie: 4.0.0.6
Build 20230818


Naslag versie 4: 


https://stackoverflow.com/questions/24072916/multi-vm-in-one-vagrantfile-could-i-set-different-memory-size-for-each-of-them

http://sysadm.pp.ua/linux/sistemy-virtualizacii/vagrantfile.html

https://ctrlnotes.com/vagrant-advanced-examples/#-insert-custom-ssh-public-key-to-the-vm


To do:

- Kubernetes Alvistack


Changes: 
- ssh username / password vgu2204
- Kubernetes install script
- VMware Windows 10/11 gezamenlijke definitie 
- gezamelijke defintie vmware generic ubuntu
- lnxnode en winnode ivm shell bij juiste operating system
- Ubuntu Server Box
- Alvistack Kubernetes 1.27 box 


Legenda Boxes:

POV		provider	Oracle Virtualbox
PVD		provider	VMWare Workstation / Fusion PRO
PDR		provider	Docker
PMH		provider	Microsoft Hyper-V

ULD		Ubuntu Linux desktop
ULS		Ubuntu Linux server
ALD		Alpine Linux Desktop
ALS		Alpine Linux Server

AS	=	Alvistack Box
GC 	= 	Generic Box
GR 	= 	Gusztavvargadr Box
MN 	= 	Maroskukan Box

S		Small			2 GB	
M		Medium			4 GB
L		Large			8 GB
XL		Extra Large		16 GB

A	=	Ansible
K	=	Kubernetes

=end
#
#
#
#
require 'date'
cur_date = Date.today
#
#
puts "The used Vagrantfile is for private or educational use only !"
#
#
# ############################################ [Declaratie Virtuele Machines] ##########################################
#
#
#
#
ubuntu_machines=[
	#
	#
	#	#######
	#	GENERIC
	#	#######
	#
	#
	#	Ubuntu 20.04.x LTS Focal Fossa (release 23 april 2020) (EOS April 2025) (EOL April 2030)
	#
	#	Laatste versie is 20.04.6 LTS (Maart 2023)
	#
	#	https://www.omgubuntu.co.uk/2022/02/download-ubuntu-20-04-4-point-release
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2004-GC-S",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004,
		:aanbieder => "Oracle",		
        :ram => 2048,
        :cpu => 2,
		:ip => "192.168.56.201",
	},
	{
        :hostname => "pvd-uld-2004-GC-S",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "VMware",
        :ram => 2048,
        :cpu => 2,
	},
	{
        :hostname => "pov-uld-2004-GC-M",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "Oracle",
        :ram => 4096,
        :cpu => 2,
		:ip => "192.168.56.202",
    },
    {
        :hostname => "pvd-uld-2004-GC-M",
        :box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 4096,
        :cpu => 2,
    },
	{
		:hostname => "pov-uld-2004-GC-L",
		:box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.203",
    },
	{
		:hostname => "pvd-uld-2004-GC-L",
		:box => "generic/ubuntu2004",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
		#
		#	Ubuntu 22.04.x LTS Jammy Jellyfish (release 23 februari 2023) (EOS April 2027) (EOL April 2032) 
		#
		#	Laatste versie: 22.04.3 LTS Augustus 2023
		#	Bevat Kernel 6.2
		# 	Meer info: https://wiki.ubuntu.com/UbuntuWeeklyNewsletter/Issue800
		#
		# 	https://wiki.ubuntu.com/Releases
		#
    {
        :hostname => "pov-uld-2204-GC-S",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
        :ram => 2048,
        :cpu => 2,
		:ip => "192.168.56.204",
    },      
	{
        :hostname => "pvd-uld-2204-GC-S",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "VMware",
        :ram => 2048,
        :cpu => 2,
    },
    {
        :hostname => "pov-uld-2204-GC-M",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
        :ram => 4096,
        :cpu => 2,
		:ip => "192.168.56.205",
    },	  
    {
        :hostname => "pvd-uld-2204-GC-M",
        :box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "VMware",
        :ram => 4096,
        :cpu => 2,
    },
	{
		:hostname => "pov-uld-2204-GC-L",
		:box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.206",
    },	  
	{
		:hostname => "pvd-uld-2204-GC-L",
		:box => "generic/ubuntu2204",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
		#
		#	Ubuntu 22.10 Kinetec Kundu (interim release 20 oktober 2022)
		#
		#	Linux Kernel 5.19
		#	GNOME 43
		#	
		#	GEEN (security) updates meer NA 20 juli 2023
		#	Alleen voor testen gebruiken !
		#
		# 	https://wiki.ubuntu.com/Releases
		#
    {
        :hostname => "pov-uld-2210-GC-S",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
        :ram => 2048,
        :cpu => 2,
		:ip => "192.168.56.207",
    },		
    {
        :hostname => "pvd-uld-2210-GC-S",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
        :ram => 2048,
        :cpu => 2,
    },
    {
        :hostname => "pov-uld-2210-GC-M",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
        :ram => 4096,
        :cpu => 2,
		:ip => "192.168.56.208",
    },	  
    {
        :hostname => "pvd-uld-2210-GC-M",
        :box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMWare",
        :ram => 4096,
        :cpu => 2,
    },
	{
		:hostname => "pov-uld-2210-GC-L",
		:box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.209",
    },	  
	{
		:hostname => "pvd-uld-2210-GC-L",
		:box => "generic/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#
	#	##########
	#	Maroskukan
	#	##########
	#
	#
	#	Maroskukan Ubuntu 22.10 Kinetec Kundu (interim release 20 oktober 2022)
	#
	#	GEEN (security) updates meer NA 20 juli 2023
	#	Alleen voor testen gebruiken !
	#
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2210-MN-S",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
		:ram => 2048,
		:cpu => 2,
		:ip => "192.168.56.210",
    },
	{
		:hostname => "pvd-uld-2210-MN-S",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 2048,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2210-MN-M",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "Oracle",
		:ram => 4096,
		:cpu => 2,
		:ip => "192.168.56.211",
    },
	{
		:hostname => "pvd-uld-2210-MN-M",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 4096,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2210-MN-L",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 	
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.212",
    },
	{
		:hostname => "pvd-uld-2210-MN-L",
		:box => "maroskukan/ubuntu2210",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#	Maroskukan Ubuntu 23.04 (Lunar Lobster) (release 20 april 2023) (EOS/EOL januari 2024)
	#
	#	Bevat nieuwe installer en GNOME versie 44 (Desktop bij Release) 
	#	Kernel versie 6.2
	#	https://www.omgubuntu.co.uk/2023/03/ubuntu-23-04-features
	#
	# 	https://wiki.ubuntu.com/Releases	
	#
	{
		:hostname => "pov-uld-2304-MN-S",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 2048,
		:cpu => 2,
		:ip => "192.168.56.213",
    },
	{
		:hostname => "pvd-uld-2304-MN-S",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "VMware",
		:ram => 2048,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2304-MN-M",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 4096,
		:cpu => 2,
		:ip => "192.168.56.214",
    },
	{
		:hostname => "pvd-uld-2304-MN-M",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "VMware",
		:ram => 4096,
		:cpu => 2,
    },
	{
		:hostname => "pov-uld-2304-MN-L",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.215",
    },
	{
		:hostname => "pvd-uld-2304-MN-L",
		:box => "maroskukan/ubuntu2304",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	#
	#
	#	####################################
	#	Alvistack
	#	https://github.com/alvistack
	#	####################################
	#
	#
	#	Alvistack Ubuntu 22.04 Jammy Jellyfish (release 23 februari 2023) (EOS April 2027) (EOL April 2032) 
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2204-AS-L-A",
		# 	Standaard voorzien van Ansible
		#	https://app.vagrantup.com/alvistack/boxes/ubuntu-22.04
		#	https://github.com/alvistack/vagrant-ubuntu
		:box => "alvistack/ubuntu-22.04",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2204, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.216",
    },
#	{
#       :hostname => "oak8u22L",
#	   #	Kubernetes
#	   #	https://github.com/alvistack/vagrant-kubernetes
#	   #
#	   #	Ubuntu 22.04.3 LTS 
#	   #
#	   #	config.vm.disk :disk, name: 'sdb', size: '10GB'
#	   #	virtualbox.customize ['modifyvm', :id, '--cpu-profile', 'host']
#	   #	virtualbox.customize ['modifyvm', :id, '--nested-hw-virt', 'on']
#	   #
#       :box => "alvistack/kubernetes-1.27",
#	   :aanbieder => "Oracle",
#       #	virtualbox.memory = 8192
#	   :ram => 4096,
#       #	virtualbox.cpus = 2
#	   :cpu => 2,
#	   :ip => "192.168.56.217",
#    },
	#
	#	Alvistack Ubuntu 22.10 Kinetec Kundu (interim release 20 oktober 2022)
	#	GEEN (security) updates meer NA 20 juli 2023
	#	Alleen voor testen gebruiken !
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2210-AS-L-A",
		# 	Standaard voorzien van Ansible
		#	https://github.com/alvistack/vagrant-ubuntu       
		:box => "alvistack/ubuntu-22.10",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2210, 	   
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.218",
    },
	#
	#	Alvistack Ubuntu 23.04 (Lunar Lobster) (release 20 april 2023) (EOS/EOL januari 2024) 
	# 	https://wiki.ubuntu.com/Releases
	#
	{
		:hostname => "pov-uld-2304-AS-L-A",
		#	Standaard voorzien van Ansible
		#	https://github.com/alvistack/vagrant-ubuntu	   
		:box => "alvistack/ubuntu-23.04",
		:os => "ubuntu",
		:osedition => "desktop",
		:osversie => 2304, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.219",
    },
	#
	#
	#	##############
	#	gusztavvargadr
	#	##############
	#
	#
	#	Gusztavvargadr Ubuntu Server 20.04.x LTS Focal Fossa (release 23 april 2020) (EOS April 2025) (EOL April 2030)  
	# 	https://wiki.ubuntu.com/Releases
	#
	#
	#	gusztavvargadr/ubuntu-server = Ubuntu Server 20.04.6 LTS
	#
	{
		:hostname => "pov-uls-2004-GR-L",
		:box => "gusztavvargadr/ubuntu-server",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.220",
    },
	{
		:hostname => "pov-uls-2004-GR-L-2004LTS",
		:box => "gusztavvargadr/ubuntu-server-2004-lts",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "Oracle",
		:ram => 8192,
		:cpu => 2,
		:ip => "192.168.56.221",
    },
	{
		:hostname => "pvd-uls-2004-GR-L",
		:box => "gusztavvargadr/ubuntu-server",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    },
	{
		:hostname => "pvd-uls-2004-GR-L-2004LTS",
		:box => "gusztavvargadr/ubuntu-server-2004-lts",
		:os => "ubuntu",
		:osedition => "server",
		:osversie => 2004, 
		:aanbieder => "VMware",
		:ram => 8192,
		:cpu => 2,
    }
	#
	#
	#
	#
	#
    ]
#
#
#
#
windows_machines=[
	#
	#
	#	################################
	#	Windows 10 Enterprise Evaluation
	#	################################
	#
	#
	#	##############
	#	gusztavvargadr
	#	##############
	#
	#
	{
		:hostname => "ow10eval",
        :box => "gusztavvargadr/windows-10",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 10, 
		:aanbieder => "Oracle",
        :ram => 8192,
        :cpu => 2
	},
	{
        :hostname => "vw10eval",
        :box => "gusztavvargadr/windows-10",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 10, 
		:aanbieder => "VMware",
        :ram => 8192,
        :cpu => 2
	},
	#
	#
	#	################################
	#	Windows 11 Enterprise Evaluation
	#	################################
	#
	#
	#	##############
	#	gusztavvargadr
	#	##############
	#
	#
	{
		:hostname => "ow11eval",
        :box => "gusztavvargadr/windows-11",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 11, 
		:aanbieder => "Oracle",
        :ram => 8192,
        :cpu => 2
	},
	{
        :hostname => "vw11eval",
        :box => "gusztavvargadr/windows-11",
		:os => "windows",
		:osedition => "desktop",
		:osversie => 11, 
		:aanbieder => "VMware",
        :ram => 8192,
        :cpu => 2
	}
	#
	#
	#
    ]
#
#
# 	############################################ [Declaratie Scripts] ##########################################
#
#
#	##########################
#	[1]		Linux
#	##########################
#
#
#	[1a]	Script die bij IEDERE virtuele machine worden uitgevoerd (zowel provision als execute) ##
#
#
# 	[1a-1] 	Ubuntu repo
#
#
$ubuntu_repo = <<SCRIPT
	#
	# Aanmaken ubuntu_repo Script 
	#
	#!/bin/bash
	echo '#!/bin/bash' 													 > /home/vagrant/ubuntu_repo.sh
	echo '#' 															>> /home/vagrant/ubuntu_repo.sh
	echo '# Ubuntu Reposiory nl.archive.ubuntu.com' 					>> /home/vagrant/ubuntu_repo.sh
	echo '# (c) 2023 John Tutert' 										>> /home/vagrant/ubuntu_repo.sh
	echo '#' 															>> /home/vagrant/ubuntu_repo.sh
	echo '# Aanpassen sources.list' 									>> /home/vagrant/ubuntu_repo.sh
	echo "sudo sed 's@mirrors.edge.kernel.org@nl.archive.ubuntu.com@' -i /etc/apt/sources.list" >> /home/vagrant/ubuntu_repo.sh
	echo '# APT bijwerken' 												>> /home/vagrant/ubuntu_repo.sh
	echo sudo apt update -qq -y 										>> /home/vagrant/ubuntu_repo.sh
	chmod +x /home/vagrant/ubuntu_repo.sh
SCRIPT
#
#
# [1a-2] Ubuntu upgrade script
#
#
$ubuntu_upgrade = <<SCRIPT
	#
	# Aanmaken ubuntu_upgrade Script 
	#
	#!/bin/bash
	echo '#!/bin/bash'                        > /home/vagrant/ubuntu_upgrade.sh
	echo '#'                                 >> /home/vagrant/ubuntu_upgrade.sh
	echo '# Ubuntu UPGRADE'                  >> /home/vagrant/ubuntu_upgrade.sh
	echo '# (c) 2023 John Tutert'            >> /home/vagrant/ubuntu_upgrade.sh
	echo '#'                                 >> /home/vagrant/ubuntu_upgrade.sh
	echo '# Package Manager updaten'         >> /home/vagrant/ubuntu_upgrade.sh
	echo sudo apt update -qq -y              >> /home/vagrant/ubuntu_upgrade.sh
	echo '# Ubuntu upgraden'                 >> /home/vagrant/ubuntu_upgrade.sh
	echo sudo apt upgrade -y                 >> /home/vagrant/ubuntu_upgrade.sh
	echo sudo apt autoremove -qq -y          >> /home/vagrant/ubuntu_upgrade.sh
	chmod +x /home/vagrant/ubuntu_upgrade.sh
SCRIPT
#
#
# [1a-3] Ubuntu_Utils
#
#
# Midnight Commander (MC en MCedit) 
# Screenfetch
# Open-VM-Tools (VMware Tools) 
# WGet
#
#
$ubuntu_utils_install = <<SCRIPT
	#
	# Aanmaken ubuntu_config Script 
	#
	#!/bin/bash
	echo '#!/bin/bash'                        > /home/vagrant/ubuntu_utils_install.sh
	echo '#'                                 >> /home/vagrant/ubuntu_utils_install.sh
	echo '# Ubuntu Installatie Utils'        >> /home/vagrant/ubuntu_utils_install.sh
	echo '# (c) 2023 John Tutert'            >> /home/vagrant/ubuntu_utils_install.sh
	echo '#'                                 >> /home/vagrant/ubuntu_utils_install.sh
	echo '# Midnight Commander'              >> /home/vagrant/ubuntu_utils_install.sh
	echo sudo apt install -y mc              >> /home/vagrant/ubuntu_utils_install.sh
	echo '# Screenfetch'                     >> /home/vagrant/ubuntu_utils_install.sh
	echo sudo apt install -y screenfetch     >> /home/vagrant/ubuntu_utils_install.sh
	echo '# Open-VM-Tools'                   >> /home/vagrant/ubuntu_utils_install.sh
	echo sudo apt install -y open-vm-tools   >> /home/vagrant/ubuntu_utils_install.sh
	echo '# WGet'                            >> /home/vagrant/ubuntu_utils_install.sh
	echo sudo apt install -y wget            >> /home/vagrant/ubuntu_utils_install.sh
	# echo sudo apt install -y mc screenfetch open-vm-tools wget >> /home/vagrant/ubuntu_utils_install.sh
	chmod +x /home/vagrant/ubuntu_utils_install.sh
SCRIPT
#
#
# [1b] Script die bij provision virtuele machine met meer dan 4 GB RAM worden uitgevoerd
#
#
# [1b-1] Minikube_installatie (Kubernetes) 
#
#
$minikube_installatie = <<SCRIPT
	#
	# Aanmaken minikube installatie Script
	# Provider = Docker 
	#
	#!/bin/bash
	echo '#!/bin/bash'                            > /home/vagrant/minikube_installatie.sh
	echo '#'                                     >> /home/vagrant/minikube_installatie.sh
	echo '# Installatie Minikube'                >> /home/vagrant/minikube_installatie.sh
	echo '# (c) 2023 John Tutert'                >> /home/vagrant/minikube_installatie.sh
	echo '#'                                     >> /home/vagrant/minikube_installatie.sh
	echo wget https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb >> /home/vagrant/minikube_installatie.sh
	echo sudo dpkg -i minikube_latest_amd64.deb  >> /home/vagrant/minikube_installatie.sh
	# Minikube Driver Docker = Default
	echo minikube config set driver docker       >> /home/vagrant/minikube_installatie.sh
	# Installatie kubectl
	echo sudo snap install kubectl --classic     >> /home/vagrant/minikube_installatie.sh
	chmod +x /home/vagrant/minikube_installatie.sh
SCRIPT
#
#
# [1b-2] Minio_docker [Minio als Docker containers] 
#
# https://blog.knoldus.com/how-to-run-minio-as-a-docker-container/
#
#
$minio_docker = <<SCRIPT
	#!/bin/bash
	echo '#!/bin/bash' 								 > /home/vagrant/minio-docker-run.sh
	echo '#' 										>> /home/vagrant/minio-docker-run.sh
	echo '# Minio Object Storage on Docker' 		>> /home/vagrant/minio-docker-run.sh
	echo 'docker run -d -p 9000:9000 -p 9001:9001 -e "MINIO_ROOT_USER=minio99" -e "MINIO_ROOT_PASSWORD=minio123" quay.io/minio/minio server /data --console-address ":9001"' >/home/vagrant/minio-docker-run.sh
	chmod +x /home/vagrant/minio-docker-run.sh
SCRIPT
#
#
#
# [1b-3] ansible_installatie 
#
#
$ansible_installatie = <<SCRIPT
	#
	# Aanmaken Ansible installatie Script
	#
	#!/bin/bash
	echo '#!/bin/bash' 									 > /home/vagrant/Ansible-installatie.sh
	echo '#' 											>> /home/vagrant/Ansible-installatie.sh
	echo '# ANSIBLE Installatie' 						>> /home/vagrant/Ansible-installatie.sh
	echo '# (c) 2023 John Tutert' 						>> /home/vagrant/Ansible-installatie.sh
	echo '#' 											>> /home/vagrant/Ansible-installatie.sh
	echo '# Toevoegen Repository' 						>> /home/vagrant/Ansible-installatie.sh
	echo sudo apt-add-repository ppa:ansible/ansible 	>> /home/vagrant/Ansible-installatie.sh
	echo '# Bijwerken Repository' 						>> /home/vagrant/Ansible-installatie.sh
	echo sudo apt update 								>> /home/vagrant/Ansible-installatie.sh
	echo '# Ansible Install' 							>> /home/vagrant/Ansible-installatie.sh
	echo sudo apt install -y ansible 					>> /home/vagrant/Ansible-installatie.sh
	chmod +x /home/vagrant/Ansible-installatie.sh
SCRIPT
#
#
# 	[1c] Script die bij provision virtuele machine met meer dan 8 GB RAM worden uitgevoerd
#
# 	[1c-1] 	minio_installatie [native install minio / niet voor minikube of kubernetes ] 
#
#
$minio_installatie = <<SCRIPT
	#
	#
	# Installatie MinIO script (niet gebruiken voor Kubernetes)
	#  
	# 
	# Naslag: 
	# https://www.digitalocean.com/community/tutorials/how-to-set-up-minio-object-storage-server-in-standalone-mode-on-ubuntu-20-04
	# https://gist.github.com/kstevenson722/e7978a75aec25feaa6ad0965ec313e2d
	#
	#
	#!/bin/bash
	#	[Header]
			echo '#!/bin/bash' > /home/vagrant/minio-installatie.sh
			echo '#' >> /home/vagrant/minio-installatie.sh
			echo '# MinIO Native Installatie' >> /home/vagrant/minio-installatie.sh
			echo '# (c) 2023 John Tutert' >> /home/vagrant/minio-installatie.sh
			echo '#' >> /home/vagrant/minio-installatie.sh
			echo '# Toevoegen Repository' >> /home/vagrant/minio-installatie.sh
	# 	[MinIO Server Installatie]
			echo wget https://dl.min.io/server/minio/release/linux-amd64/minio_20230718174940.0.0_amd64.deb >> /home/vagrant/minio-installatie.sh
			echo sudo dpkg -i minio_20230718174940.0.0_amd64.deb >> /home/vagrant/minio-installatie.sh
	# 	[MinIO Groepen/Gebruikers]
			echo sudo groupadd -r minio-user >> /home/vagrant/minio-installatie.sh
			echo sudo useradd -M -r -g minio-user minio-user >> /home/vagrant/minio-installatie.sh
	# 	[MinIO Storage Folder]
			echo sudo mkdir /mnt/data >> /home/vagrant/minio-installatie.sh
			echo sudo chown minio-user:minio-user /mnt/data >> /home/vagrant/minio-installatie.sh
	# 	[MinIO Configuratie]
			echo 'echo MINIO_VOLUMES="/mnt/data" >> /etc/default/minio' >> /home/vagrant/minio-installatie.sh
			echo 'echo MINIO_OPTS="--certs-dir /home/vagrant/.minio/certs --console-address :9001" >> /etc/default/minio' >> /home/vagrant/minio-installatie.sh
			echo 'echo MINIO_ROOT_USER=minioadmin >> /etc/default/minio' >> /home/vagrant/minio-installatie.sh
			echo 'echo MINIO_ROOT_PASSWORD=minioadmin >> /etc/default/minio' >> /home/vagrant/minio-installatie.sh
	# 	[MinIO UFW poorten openzetten]
			echo sudo ufw allow 9000:9001/tcp >> /home/vagrant/minio-installatie.sh
	# 	[Starten MinIO Server]
			echo sudo systemctl start minio >> /home/vagrant/minio-installatie.sh
			echo sudo systemctl enable minio >> /home/vagrant/minio-installatie.sh
	# 	[MinIO Client Installatie]
			echo wget https://dl.min.io/client/mc/release/linux-amd64/mcli_20230718210538.0.0_amd64.deb >> /home/vagrant/minio-installatie.sh
			echo sudo dpkg -i mcli_20230718210538.0.0_amd64.deb >> /home/vagrant/minio-installatie.sh
	# 	[KubeCTL MinIO Plugin]
			# https://min.io/docs/minio/kubernetes/upstream/reference/kubectl-minio-plugin.html
			# https://www.origo.io/info/stabiledocs/guides/minio-object-storage-service/
			echo wget https://github.com/minio/operator/releases/download/v5.0.6/kubectl-minio_5.0.6_linux_amd64 -O kubectl-minio >> /home/vagrant/minio-installatie.sh
			echo chmod +x kubectl-minio >> /home/vagrant/minio-installatie.sh
			echo sudo mv kubectl-minio /usr/local/bin/ >> /home/vagrant/minio-installatie.sh
			#
			# https://www.olivercoding.com/2021-03-01-kubernetes-minio-init/
			# echo kubectl create namespace minio-operator >> /home/vagrant/minio-installatie.sh
			# echo kubectl minio init --namespace minio-operator >> /home/vagrant/minio-installatie.sh
			#
	chmod +x /home/vagrant/minio-installatie.sh
SCRIPT
#
#
#	[1d]	Installatie services 
#
#	
#	GEEN SCRIPTS
#
#
#	[1z]	Scripts die NIET meer gebruikt worden
#
#
# 	[1z-1] 	Datapacket Repo
#
#
$datapacket_repo = <<SCRIPT
	#!/bin/bash
	#
	# Reposity Nederland Datapacket toevoegen aan /etc/apt/sources.list bestand binnen Ubuntu Linux.   
	#
	sudo add-apt-repository "deb http://mirror.nl.datapacket.com/ubuntu $(lsb_release -sc) universe"
	#
	# [OPTIE] [Vervangen standaard (mirros.edge.kernel.org) door nl.archive.ubuntu.com 
	# [OPTIE #1] echo "sudo sed 's@mirrors.edge.kernel.org@nl.archive.ubuntu.com@' -i /etc/apt/sources.list" >> /directory/file
	# [OPTIE #2] sudo sed 's@mirrors.edge.kernel.org@mirror.nl.datapacket.com@' -i /etc/apt/sources.list
	#
	sudo apt-get update
	#
SCRIPT
#
#
# 	[1z-2] Docker Repo
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
$docker_repo = <<SCRIPT
	#!/bin/bash
	#
	# Repository toevoegen, zodat DOCKER-CE vervolgens geïnstalleerd kan worden m.b.t. commando binnen shell of via script. 
	#
	sudo apt-get install -y ca-certificates curl gnupg
	sudo install -m 0755 -d /etc/apt/keyrings
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
	sudo chmod a+r /etc/apt/keyrings/docker.gpg
	echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
SCRIPT
#
#
# 	[1z-3] Docker rechten
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
#
$docker_rechten = <<SCRIPT
	#
	# Aanmaken docker_rechten Script
	#
	#!/bin/bash
	echo '#!/bin/bash' > /home/vagrant/docker-rechten.sh
	echo '#' >> /home/vagrant/docker-rechten.sh
	echo '# Docker Rechten Configuratie' >> /home/vagrant/docker-rechten.sh
	echo '# (c) 2023 John Tutert' >> /home/vagrant/docker-rechten.sh
	echo '#' >> /home/vagrant/docker-rechten.sh
	# 
	# ################################################################################################################
	#
	# usermod (https://linuxize.com/post/usermod-command-in-linux/) 
	#
	# sudo usermod -g GROUP USER
	# To change a user’s primary group, invoke the usermod command with by the -g option followed the group’s name and the username:
	#
	# usermod -a -G GROUP USER
	# To add an existing user to a secondary group, use the -a -G options followed the group’s name and the username
	#
	#
	#
	#
	# C:\HashiCorp\Vagrant\embedded\gems\gems\vagrant-2.3.7\plugins\provisioners\docker\cap\linux\docker_configure_vagrant_user.rb
	# Commando in dit bestand: sudo usermod -a -G docker 
	# 
	# ################################################################################################################
	#
	#
	# Bestaande gebruiker Vagrant toevoegen aan een Secondary Group
	echo sudo usermod -a -G docker vagrant >> /home/vagrant/docker-rechten.sh
	#
	#
	echo '# Melding' >> /home/vagrant/docker-rechten.sh
	echo echo Doe eventueel een reboot via shutdown -r now of logout om rechten actief te maken >> /home/vagrant/docker-rechten.sh
	#
	chmod +x /home/vagrant/docker-rechten.sh
SCRIPT
#
#
#	[1z-4] Docker_installatie [Alleen getest op Ubuntu 22.10]
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
#
$docker_installatie = <<SCRIPT
	#
	# Aanmaken docker_installatie Script
	#
	#!/bin/bash
	echo '#!/bin/bash'                        	 	    	 > /home/vagrant/docker_installatie.sh
	echo '#'                                 				>> /home/vagrant/docker_installatie.sh
	echo '# Vagrant Docker-CE Installatie'   				>> /home/vagrant/docker_installatie.sh
	echo '# (c) 2023 John Tutert'            				>> /home/vagrant/docker_installatie.sh
	echo '#'                                 				>> /home/vagrant/docker_installatie.sh
	echo sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin >> /home/vagrant/docker_installatie.sh
	echo '#'                                 				>> /home/vagrant/docker_installatie.sh
	echo '# Gebruiker Vagrant toevoegen aan groep docker' 	>> /home/vagrant/docker_installatie.sh
	echo sudo usermod -a -G docker vagrant 					>> /home/vagrant/docker_installatie.sh
	chmod +x /home/vagrant/docker_installatie.sh
SCRIPT
#
#
# 	[1z-5] Docker_install [HashiCorp Vagrant] 
#
#	Wordt niet meer gebruik om Vagrant Docker kan installeren als Provider
#
#
#	Inspiratie: 
# 	C:\HashiCorp\Vagrant\embedded\gems\gems\vagrant-2.3.7\plugins\provisioners\docker\cap\debian\docker_install.rb
#
#
$docker_hashicorp_install = <<SCRIPT
	#
	# Aanmaken docker_installatie Script
	#
	#!/bin/bash
	echo '#!/bin/bash'                        	 	    				 > /home/vagrant/docker_hashicorp_install.sh
	echo '#'                                 							>> /home/vagrant/docker_hashicorp_install.sh
	echo '# Vagrant Docker-CE Installatie'   							>> /home/vagrant/docker_hashicorp_install.sh
	echo '# HashiCorp'            										>> /home/vagrant/docker_hashicorp_install.sh
	echo '#'                                 							>> /home/vagrant/docker_hashicorp_install.sh
	echo apt-get update -qq -y 											>> /home/vagrant/docker_hashicorp_install.sh
	echo apt-get install -qq -y --force-yes curl apt-transport-https 	>> /home/vagrant/docker_hashicorp_install.sh
	echo apt-get purge -qq -y lxc-docker* || true 						>> /home/vagrant/docker_hashicorp_install.sh
	echo curl -sSL https://get.docker.com/ | sh 						>> /home/vagrant/docker_hashicorp_install.sh
	echo service docker start											>> /home/vagrant/docker_hashicorp_install.sh
	echo '#'                                 							>> /home/vagrant/docker_hashicorp_install.sh
	echo sudo usermod -a -G docker vagrant 								>> /home/vagrant/docker_hashicorp_install.sh
	chmod +x /home/vagrant/docker_hashicorp_install.sh
SCRIPT
#
#
#	[1z-6]	Kubernetes_installatie 
#
#	Wordt niet meer gebruikt ivm Alvistack Kubernetes BOX/VM
#
#
$kubernetes_installatie = <<SCRIPT
#
# 	Kubernetes installatie Script
# 	https://www.nakivo.com/blog/install-kubernetes-ubuntu/
#
#!/bin/bash
#
# swap
#
sudo swapoff -a
sudo sed -i ‘/ swap / s/^\(.*\)$/#\1/g’ /etc/fstab
sudo echo “vm.swappiness=0” | sudo tee –append /etc/sysctl.conf
sudo sysctl -p
#
# Installatie
#
echo ‘deb http://apt.kubernetes.io/ kubernetes-xenial main’ | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
#
#
#
sudo apt-get install keepalived
sudo systemctl enable keepalived && systemctl start keepalived
# kubeadm init –pod-network-cidr=10.244.0.0/16 –apiserver-advertise-address=192.168.101.21
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl get nodes
# chmod +x /home/vagrant/kubernetes_installatie.sh
SCRIPT
#
#
#
#	######################
# 	[2]	WINDOWS
#	######################
#
#
# [2a] Scripts die ALTIJD uitgevoerd worden bij eerste start van VM
#
#
# [2a-1] Installatie WinGET
#
#
$winget_installatie = <<SCRIPT
	# REM powershell -ExecutionPolicy Unrestricted 
	# REM powershell -file ps-winget.ps1
SCRIPT
#
# [2b] Scripts die aangemaakt worden, maar later handmatig gestart moeten worden
#
$win_script_aanmaak = <<SCRIPT
	# REM powershell -ExecutionPolicy Unrestricted 
	# REM powershell -file ps-winget.ps1
SCRIPT
#
#
#
#
#
# ############################################ [Virtuele Machines] ##########################################
#
#
#
#
Vagrant.configure("2") do |config|
	#
	#
	#
	# Melding komt elke keer in beeld bij commando met Vagrant ervoor
	# puts "tekst tekst tekst tekst"
	#
	#
	# ############################################ [Oracle / VMware] ##########################################
	#
	#
	#
	#	
	#
	# ####################################
	#              UBUNTU
	# ####################################
	#
	#
	#
	#
	ubuntu_machines.each do |machine|
		config.vm.define machine[:hostname] do |ulxnode|
			#
			ulxnode.vm.box = machine[:box]
			ulxnode.vm.box_check_update = false
			ulxnode.vm.hostname = "#{machine[:hostname]}"
			#
			# ulxnode.ssh.username = "vagrant"
			# ulxnode.ssh.password = "vagrant"
			#
			#
			# ####################################################################	
			#
			#	Network
			#
			#	Adapters
			#
			#	Adapter 2 Host-Only	
			#
			#	Oracle Virtualbox fixed IP-address
			#
			if machine[:aanbieder] == "Oracle"
				ulxnode.vm.network "private_network", ip: "#{machine[:ip]}", netmask: "255.255.255.0"
			end
			#
			#	VMware Workstation / Fusion PRO DHCP IP-address
			#
			if machine[:aanbieder] == "VMware"
				ulxnode.vm.network "private_network", type: "dhcp"			
			end
			#
			#
			# 	Adapter 3 Bridged
			# 	ulxnode.vm.network "public_network", bridge: "VMware Virtual Ethernet Adapter for VMnet8"
			# 	ulxnode.vm.network "public_network", bridge: "Ethernet"
			#
			#	Port Forwarding
			#	ulxnode.vm.network :forwarded_port, guest: 3389, host: 53389, auto_correct: true
			#
			# ####################################################################
			#
			# ####################################################################		
			# https://developer.hashicorp.com/vagrant/docs/synced-folders/basic_usage
			#
			# 	Windows
			# 	https://ss64.com/nt/syntax-variables.html
			#
			if #{ENV['OS']} == "Windows_NT" 
				ulxnode.vm.synced_folder "C://Users//#{ENV['USERNAME']}", "/home/#{ENV['USERNAME']}"
				ulxnode.vm.synced_folder "#{ENV['USERPROFILE']}//Downloads", "/home/vagrant/downloads"
				ulxnode.vm.synced_folder "#{ENV['USERPROFILE']}//Documents", "/home/vagrant/documents"
			end 
			#
			# 	macOS
			#	https://ss64.com/osx/syntax-env_vars.html
			#
			# 	node.vm.synced_folder "#{ENV['HOME']}", "/home/#{ENV['USER']}"
			# 	node.vm.synced_folder "#{ENV['TMPDIR']}", "/home/vagrant/downloads"
			# 	node.vm.synced_folder "#{ENV['HOME']}", "/home/vagrant/documents"
			#
			# ####################################################################
			#
			ulxnode.vm.post_up_message = "Start scripts in /home/vagrant voor verdere configuratie"
			#
			# ####################################################################
			# Installatie Docker-CE en Compose plugin
			# Eventueel pull images
			#
			# https://developer.hashicorp.com/vagrant/docs/provisioning/docker
			#
			# C:\HashiCorp\Vagrant\embedded\gems\gems\vagrant-2.3.7\plugins\provisioners\docker\cap\debian
			#		
			if machine[:ram] >= 4096
				#	https://www.rubyguides.com/ruby-tutorial/ruby-if-else/
				ulxnode.vm.provision "docker" do |d|
					d.pull_images "hello-world"				# 	13.3 KB
					d.pull_images "alpine"					# 	7.33 MB
					d.pull_images "debian"					#	116 MB
					d.pull_images "registry"				# 	24 MB
				end
			end
			#
			if machine[:ram] >= 8192
				#	https://www.rubyguides.com/ruby-tutorial/ruby-if-else/
				ulxnode.vm.provision "docker" do |d|
					d.pull_images "quay.io/minio/minio"		#	277 MB
				end
			end
			#
			# ####################################################################
			# Installatie Ansible + uitvoeren playbook.yml
			#
			# ulxnode.vm.provision "ansible_local" do |ansible|
			#	ansible.playbook = "playbook.yml"
			# end
			#
			# ####################################################################
			#
			#
			#	Oracle Virtualbox
			#
			#
			if machine[:aanbieder] == "Oracle"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/virtualbox
				#
				ulxnode.vm.provider "virtualbox" do |ovbvm|
					#
					ovbvm.gui 			= true
					ovbvm.linked_clone 	= false
					#
					ovbvm.cpus 			= "#{machine[:cpu]}"
					ovbvm.memory 		= "#{machine[:ram]}"
					ovbvm.name 			= "#{machine[:hostname]}"
					#
					ovbvm.customize ["modifyvm", :id, "--vram", "128"]
					ovbvm.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--description", "Vagrant |0D|0A#{machine[:box]} |0D|0ACreated #{cur_date} |0D|0AUsername/Password = vagrant"] 
					#
					# if machine[:box] == "alvistack/kubernetes-1.27"
					#	#	VAGRANT_EXPERIMENTAL moet aangezet worden voor disk hieronder ! 
					#	#	VAGRANT_EXPERIMENTAL='1' omgevingsvariable 
					#	config.vm.disk :disk, name: 'sdb', size: '10GB'
					#	ovbvm.customize ["modifyvm", :id, "--cpu-profile", "host"]
					#	ovbvm.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
					#	end
					#
				end
			end	
			#
			#
			#	VMware Workstation / Fusion PRO
			#
			#
			if machine[:aanbieder] == "VMware"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/vmware
				#			
				ulxnode.vm.provider "vmware_desktop" do |vmwvm|
					#
					vmwvm.gui 			= true
					vmwvm.linked_clone 	= false
					#
					vmwvm.cpus 			= "#{machine[:cpu]}"
					vmwvm.memory 		= "#{machine[:ram]}"
					# vmwvm.nat_device 	= "VMnet8"
					#
					# Aanpassen VMware Workstation/Fusion Pro VMX 
					#
					vmwvm.vmx["tools.syncTime"] 	= "TRUE"
					vmwvm.vmx["displayName"] 		= "#{machine[:hostname]}"
					vmwvm.vmx["annotation"] 		= "Vagrant |0D|0A#{machine[:hostname]} |0D|0ACreated #{cur_date} |0D|0AUsername/Password = vagrant"
				end
			end	
			#
			# Provision SHELL
			#
			ulxnode.vm.provision "shell", inline: <<-SHELL
				#
				#
				#
				#
			SHELL
			ulxnode.vm.provision "shell", inline: $ubuntu_repo
			ulxnode.vm.provision "shell", inline: $ubuntu_upgrade  
			ulxnode.vm.provision "shell", inline: $ubuntu_utils_install
			#
			if machine[:ram] >= 4096 
				ulxnode.vm.provision "shell", inline: $minikube_installatie
				ulxnode.vm.provision "shell", inline: $minio_docker
				ulxnode.vm.provision "shell", inline: $ansible_installatie
			end
			#
			if machine[:ram] >= 4096 && machine[:os] == "ubuntu" && machine[:osversie] == 2004
				ulxnode.vm.provision "shell", inline: <<-SHELL	
					wget https://raw.githubusercontent.com/msiekmans/linux-server-scripts/main/install-mysqlserver.sh
					wget https://raw.githubusercontent.com/msiekmans/linux-server-scripts/main/install-webserver.sh
					chmod +x /home/vagrant/install-mysqlserver.sh
					chmod +x /home/vagrant/install-webserver.sh
				SHELL
			end
			#
			if machine[:ram] >= 8192 
				ulxnode.vm.provision "shell", inline: $minio_installatie
			end
			#
			# Always SHELL
			#
			ulxnode.vm.provision "shell", run: "always", inline: <<-SHELL
				#
				# bijvoorbeeld sudo systemctl start nginx
				#
				#
			SHELL
			ulxnode.vm.provision "shell", run: "always", inline: $ubuntu_repo
			ulxnode.vm.provision "shell", run: "always", inline: $ubuntu_upgrade  
			ulxnode.vm.provision "shell", run: "always", inline: $ubuntu_utils_install
		end
	end
	#
	#
	#
	#
	#
	# #########################################
	# ###             Windows               ###
	# #########################################
	# 
	#
	#
	#
	windows_machines.each do |machine|
		config.vm.define machine[:hostname] do |winnode|
			#
			winnode.vm.box = machine[:box]
			winnode.vm.box_check_update = true
			#
			winnode.vm.hostname 		= "Vagrant-#{machine[:hostname]}"
			winnode.vm.guest 			= :windows
			winnode.vm.boot_timeout 	= 18000
			#
			winnode.winssh.shell 		= "cmd" 		# The shell to use when executing SSH commands from Vagrant. By default this is powershell. Valid values are "cmd" or "powershell".		
			#
			#	winnode.ssh.username 		= "vagrant"
			#	winnode.ssh.password 		= "vagrant"
			#
			# ####################################################################	
			#
			#	Network
			#
			#	Adapters
			#
			#	Adapter 2 Host-Only	
			winnode.vm.network "private_network", type: "dhcp"
			#	node.vm.network "private_network", ip: "192.168.56.220", netmask: "255.255.255.0"
			#
			# 	Adapter 3 Bridged
			# node.vm.network "public_network", bridge: "VMware Virtual Ethernet Adapter for VMnet8"
			# node.vm.network "public_network", bridge: "Ethernet"
			#
			#	Port-Forwarding
			#
			winnode.vm.network :forwarded_port, guest: 3389, host: 53389, auto_correct: true
			# node.vm.network "forwarded_port", guest: 3389, host: 3389, id: "rdp", auto_correct: true  [automatisch aan]
			# node.vm.network "forwarded_port", guest: 5985, host: 5985, id: "winrm", auto_correct: true [automatisch aan]
			#
			# ####################################################################
			#
			#
			# ####################################################################	
			#	WinRM
			#
			winnode.vm.communicator = "winrm" 	# standaard is ssh windows moet naar winrm
			# vw1Xeval.winrm.username = "IEUser"
			# vw1Xeval.winrm.password = "Passw0rd!"
			# vw1Xeval.winrm.host = "localhost"  	# The hostname or IP to connect to the WinRM service
			winnode.winrm.max_tries = 300 			# The maximum number of times to retry opening a shell after failure. This defaults to 20.
			winnode.winrm.retry_delay = 2 			# The amount of time to wait between retries and defaults to 2 seconds.
			#
			#
			# ####################################################################	
			#
			#
			winnode.vm.post_up_message = "Start scripts in /home/vagrant voor verdere configuratie"
			#	
			#
			#	Oracle Virtualbox
			#
			#
			if machine[:aanbieder] == "Oracle"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/virtualbox
				#
				winnode.vm.provider "virtualbox" do |ovbvm|
					#
					ovbvm.gui 			= true
					ovbvm.linked_clone 	= false
					#
					ovbvm.cpus 			= "#{machine[:cpu]}"
					ovbvm.memory 		= "#{machine[:ram]}"
					ovbvm.name 			= "Vagrant-#{machine[:hostname]}"
					#
					ovbvm.customize ["modifyvm", :id, "--vram", "128"]
					ovbvm.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
					ovbvm.customize ["modifyvm", :id, "--description", "Ubuntu 22.04 LTS Gebruiker en Password: vagrant"] 
					#
				end
			end	
			#
			#
			#	VMware Workstation / Fusion PRO
			#
			#
			if machine[:aanbieder] == "VMware"
				#
				# https://developer.hashicorp.com/vagrant/docs/providers/vmware
				#			
				winnode.vm.provider "vmware_desktop" do |vmwvm|
					#
					vmwvm.gui 			= true
					vmwvm.linked_clone	= false
					#
					vmwvm.cpus 			= "#{machine[:cpu]}"
					vmwvm.memory 		= "#{machine[:ram]}"
					# vmwvm.nat_device 	= "VMnet8"
					#
					vmwvm.vmx["tools.syncTime"]	= "TRUE"
					vmwvm.vmx["displayName"] 	= "Vagrant-#{machine[:hostname]}"
					vmwvm.vmx["annotation"] 	= "Vagrant-#{machine[:hostname]} |0D|0AUbuntu 22.04.02 LTS |0D|0A |0D|0AUsername/Password = vagrant"
				end
			end	
			#
			winnode.vm.provision "shell", privileged: "true", inline: <<-SHELL
				#
				#
				#
				#
			SHELL
		end
	end
	#
	#
	#
	#
	#
	# ############################################ [VMware Workstation/Fusion PRO] ##########################################
	#
	#
	#
	#	Geen specifieke boxes aanwezig
	#
	#
	#
	# 
	# ############################################ [Oracle Virtualbox] ######################################################
	#
	#
	# ====================================================================================
	# [pov-uld-2204-AS-L-K] 	Alvistack Kubernetes 1.27 (Ubuntu 22.04.3 LTS) 
	# 							https://github.com/alvistack/vagrant-kubernetes
	# ====================================================================================
	#
	#
	#	https://www.linuxtechi.com/install-kubernetes-on-ubuntu-22-04/
	#	https://computingforgeeks.com/install-kubernetes-cluster-ubuntu-jammy/?expand_article=1
	#
	#
	#	Weergave sudo kubeadm join commando: 
	#	sudo kubeadm token create --print-join-command
	#	https://akyriako.medium.com/install-kubernetes-on-ubuntu-20-04-f1791e8cf799
	#
	#
	config.vm.define "pov-uld-2204-AS-L-K" do |pov_uld_2204_AS_L_K|
		#
		pov_uld_2204_AS_L_K.vm.box = "alvistack/kubernetes-1.28"
		pov_uld_2204_AS_L_K.vm.box_check_update = false
		pov_uld_2204_AS_L_K.vm.hostname = "pov-uld-2204-AS-L-K"
		#
		#
		pov_uld_2204_AS_L_K.vm.disk :disk, name: 'sdb', size: '10GB'
		#
		#
		#	############################################
		#
		#	Network
		#
		#
		#	## Adapters
		#
		# 	Adapter 2 (disabled)
		# 	pov_uld_2204_AS_L_K.vm.network "private_network", ip: "192.168.56.210", netmask: "255.255.255.0"
		#
		#
		#	## Port Forwarding
		#
		# 	pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 80, host: 8888, host_ip: "127.0.0.1", protocol: "tcp", id: "webcntr01"	
		#
		#	MinIO Server (API)
		pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 9000, host: 9000, host_ip: "127.0.0.1", protocol: "tcp", id: "miniosrv"
		#	MinIO Console
		pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 9001, host: 9001, host_ip: "127.0.0.1", protocol: "tcp", id: "miniocon"
		#	MinIO
		#	pov_uld_2204_AS_L_K.vm.network "forwarded_port", guest: 9090, host: 9090, host_ip: "127.0.0.1", protocol: "tcp", id: "minio"
		#
		#	############################################
		#
		#
		#	Synced Folders
		#
		#
		pov_uld_2204_AS_L_K.vm.synced_folder "C://Users//#{ENV['USERNAME']}", "/home/#{ENV['USERNAME']}"
		pov_uld_2204_AS_L_K.vm.synced_folder "#{ENV['USERPROFILE']}//Downloads", "/home/vagrant/downloads"
		pov_uld_2204_AS_L_K.vm.synced_folder "#{ENV['USERPROFILE']}//Documents", "/home/vagrant/documents"
		#
		#
		#
		#	############################################
		#
		#
		# 	Post up message
		#
		#
		pov_uld_2204_AS_L_K.vm.post_up_message = "Start scripts in /home/vagrant voor verdere configuratie"
		#
		#		
		# https://developer.hashicorp.com/vagrant/docs/providers/virtualbox
		pov_uld_2204_AS_L_K.vm.provider "virtualbox" do |pov_uld_2204_AS_L_K_settings|
			#
			pov_uld_2204_AS_L_K_settings.gui 			= true
			pov_uld_2204_AS_L_K_settings.linked_clone 	= false
			#
			pov_uld_2204_AS_L_K_settings.cpus 			= "2"
			pov_uld_2204_AS_L_K_settings.memory 		= "8192"
			pov_uld_2204_AS_L_K_settings.name 			= "pov-uld-2204-AS-L-K"
			#
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--cpu-profile", "host"]
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--nested-hw-virt", "on"]
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--vram", "128"]
			#
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
			#
			pov_uld_2204_AS_L_K_settings.customize ["modifyvm", :id, "--description", "Vagrant (alvistack/kubernetes-1.27) Created #{cur_date} Username/Password = vagrant"] 
			#
		end 
		# Scripts die bij eerste start of provision parameter worden uitgevoerd
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: <<-SHELL
			#
			# 
			#
			#
		SHELL
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: $ubuntu_repo
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: $ubuntu_upgrade
		pov_uld_2204_AS_L_K.vm.provision "shell", inline: $ubuntu_utils_install
		# Scripts die bij eerste start of provision parameter worden uitgevoerd
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: <<-SHELL
			#
			# bijvoorbeeld sudo systemctl start nginx
			#
			#
		SHELL
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: $ubuntu_repo
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: $ubuntu_upgrade
		pov_uld_2204_AS_L_K.vm.provision "shell", run: "always", inline: $ubuntu_utils_install
	end 
	#	
	#
	#
	#
	#
	# ############################################ [Einde Boxes] ######################################################	
	#
	#
end